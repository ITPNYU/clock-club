%!PS-Adobe-2.0 EPSF-1.2%%Creator: Vectorworks 2018 SP3 [23.0.3(418943)] (64-Bit app)%%Title: clock-kit-shafts.eps%%CreationDate: 6/3/2018%%DocumentProcSets: Adobe_packedarray 1.0 0%%DocumentSuppliedProcSets: Adobe_packedarray 1.0 0%%DocumentProcSets: Adobe_cmykcolor 1.1 0%%DocumentSuppliedProcSets: Adobe_cmykcolor 1.1 0%%DocumentProcSets: Adobe_cshow 1.1 0%%DocumentSuppliedProcSets: Adobe_cshow 1.1 0%%DocumentProcSets: Adobe_customcolor 1.0 0%%DocumentSuppliedProcSets: Adobe_customcolor 1.0 0%%DocumentProcSets: Adobe_pattern 1.9 0%%DocumentSuppliedProcSets: Adobe_pattern 1.9 0%%DocumentProcSets: Adobe_Illustrator88 1.19 0%%DocumentSuppliedProcSets: Adobe_Illustrator88 1.19 0%%BoundingBox:0 0 299 139%%TemplateBox:306 396 306 396%%DocumentPreview: Header%%EndComments%%BeginProlog%%BeginProcSet: Adobe_packedarray 1.0 0userdict /Adobe_packedarray 5 dict dup begin put/initialize{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end	} ifelse} def/terminate{} def/packedarray{array astore readonly} def/setpacking{pop} def/currentpacking{false} defcurrentdict readonly pop end%%EndProcSetAdobe_packedarray /initialize get exec%%BeginProcSet: Adobe_cmykcolor 1.1 0currentpacking true setpackinguserdict /Adobe_cmykcolor 4 dict dup begin put/initialize{/setcmykcolor where	{	pop	}	{	userdict /Adobe_cmykcolor_vars 2 dict dup begin put	/_setrgbcolor		/setrgbcolor load def	/_currentrgbcolor		/currentrgbcolor load def	Adobe_cmykcolor begin	Adobe_cmykcolor		{		dup xcheck			{			bind			} if		pop pop		} forall end end	Adobe_cmykcolor begin	} ifelse} def/terminate{currentdict Adobe_cmykcolor eq	{ end	} if} def/setcmykcolor{1 sub 4 1 roll3	{	3 index add neg dup 0 lt		{		pop 0		} if	3 1 roll	} repeatAdobe_cmykcolor_vars /_setrgbcolor get execpop} def /currentcmykcolor{Adobe_cmykcolor_vars /_currentrgbcolor get exec3	{	1 sub neg 3 1 roll	} repeat0} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_cshow 1.1 0currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end end	} ifelse} def/terminate{} def/cshow{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_customcolor 1.0 0currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall end	Adobe_customcolor begin	} ifelse} def/terminate{currentdict Adobe_customcolor eq	{ end	} if} def/findcmykcustomcolor{5 packedarray}  def/setcustomcolor{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint{pop} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_pattern 1.9 0currentpacking true setpackinguserdict /Adobe_pattern 14 dict dup begin put/initialize{/definepattern where	{	pop	}	{	Adobe_pattern begin	Adobe_pattern		{		dup xcheck			{			bind			} if		pop pop		} forall	mark	cachestatus 7 1 roll pop pop pop pop exch pop exch		{		{		10000 add		dup 2 index gt			{			break			} if		dup setcachelimit		} loop		} stopped	cleartomark	} ifelse} def/terminate{currentdict Adobe_pattern eq	{ end	} if} deferrordict/nocurrentpoint{popstop} puterrordict/invalidaccess{popstop} put/patternencoding256 array def0 1 255{patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{17 dict begin/uniform exch def/cache exch def/key exch def/procarray exch def/mtx exch matrix invertmatrix def/height exch def/width exch def/ctm matrix currentmatrix def/ptm matrix def/str 32 string def/slice 9 dict defslice /s 1 putslice /q 256 procarray length div sqrt floor cvi putslice /b 0 put/FontBBox [0 0 0 0] def/FontMatrix mtx matrix copy def/Encoding patternencoding def/FontType 3 def/BuildChar	{	exch begin	slice begin	dup q dup mul mod s idiv /i exch def	dup q dup mul mod s mod /j exch def	q dup mul idiv procarray exch get	/xl j width s div mul def	/xg j 1 add width s div mul def	/yl i height s div mul def	/yg i 1 add height s div mul def	uniform		{		1 1		}		{		width 0 dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		0 height dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse	width 0 cache		{		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul		setcachedevice		}		{		setcharwidth		} ifelse	gsave	scale	newpath	xl yl moveto	xg yl lineto	xg yg lineto	xl yg lineto	closepath	clip	newpath end end	exec	grestore	} defkey currentdict definefontend} def/patterncachesize{gsavenewpath0 0 movetowidth 0 linetowidth height lineto0 height linetoclosepathpatternmatrix setmatrixpathbboxexch ceiling 4 -1 roll floor sub 3 1 rollceiling exch floor submul 1 addgrestore} def/patterncachelimit{cachestatus 7 1 roll pop pop pop pop pop pop 8 mul} def/patternpath{exch dup begin setfontctm setmatrixconcatslice exch /b exch slice /q get dup mul mul putFontMatrix concatuniform	{	width 0 dtransform round width div exch round width div exch	0 height dtransform round height div exch height div exch	0 0 transform round exch round exch	ptm astore setmatrix	}	{	ptm currentmatrix pop	} ifelse{currentpoint} stopped not	{	pop pop	pathbbox	true	4 index 3 index eq	4 index 3 index eq	and		{		pop false			{			{pop pop}			{pop pop pop true}			{pop pop pop pop pop pop pop true}			{pop true}			pathforall			} stopped			{			pop pop pop pop pop true			} if		} if		{		height div ceiling height mul 4 1 roll		width div ceiling width mul 4 1 roll		height div floor height mul 4 1 roll		width div floor width mul 4 1 roll		2 index sub height div ceiling cvi exch		3 index sub width div ceiling cvi exch		4 2 roll moveto		FontMatrix mtx invertmatrix		dup dup 4 get exch 5 get rmoveto		ptm ptm concatmatrix pop		slice /s		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi		dup slice /q get gt			{			pop slice /q get			} if		put		0 1 slice /s get dup mul 1 sub			{			slice /b get add			gsave			0 1 str length 1 sub				{				str exch 2 index put				} for			pop			dup				{				gsave				ptm setmatrix				1 index str length idiv {str show} repeat				1 index str length mod str exch 0 exch getinterval show				grestore				0 height rmoveto				} repeat			grestore			} for		pop pop		}		{		pop pop pop pop		} ifelse	} ifend} def/patternclip{clip} def/patternstrokepath{strokepath} def/patternmatrixmatrix def/patternfill{dup type /dicttype eq	{	Adobe_pattern /patternmatrix get	} ifgsavepatternclipAdobe_pattern /patternpath get execgrestorenewpath} def/patternstroke{dup type /dicttype eq	{	Adobe_pattern /patternmatrix get	} ifgsavepatternstrokepathtrue	{		{			{			newpath 			moveto			}			{			lineto			}			{			curveto			}			{			closepath			3 copy			Adobe_pattern /patternfill get exec			} pathforall		pop pop	pop		} stopped			{			pop pop pop pop pop			patternclip			Adobe_pattern /patternfill get exec			} if	}	{	patternclip	Adobe_pattern /patternfill get exec	} ifelsegrestorenewpath} def/patternashow{3 index type /dicttype eq	{	Adobe_pattern /patternmatrix get 4 1 roll	} if	{	pop pop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	6 index 6 index 6 index	Adobe_pattern /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshowpop pop pop pop pop} def/patternashowstroke{4 index type /dicttype eq	{	patternmatrix /patternmatrix get 5 1 roll	} if4 1 roll	{	pop pop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	7 index 7 index 7 index	Adobe_pattern /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshowpop pop pop pop pop pop} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_Illustrator88 1.19 0currentpacking true setpackinguserdict /Adobe_Illustrator88 73 dict dup begin put/initialize{userdict /Adobe_Illustrator88_vars 31 dict dup begin put/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_a null def/_as null def/_tt 2 array def/_tl 2 array def/_tm matrix def/t {} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null defAdobe_Illustrator88 beginAdobe_Illustrator88 dup /nc get begin	{	dup xcheck		{		bind		} if	pop pop	} forallendendendAdobe_Illustrator88 beginAdobe_Illustrator88_vars beginnewpath} def/terminate{endend} def/_null def/ddef{Adobe_Illustrator88_vars 3 1 roll put} def/xput{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop{	{	pop	} repeat} def/sw{stringwidthexch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add} def/ss{3 -1 roll pop4 1 roll	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/sp{exch pop	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/pl{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where{pop true setstrokeadjust/c{curveto} def/C/c load def/v{currentpoint 6 2 roll curveto} def/V/v load def/y{2 copy curveto} def/Y/y load def/l{lineto} def/L/l load def/m{moveto} def}{/c{pl curveto} def/C/c load def/v{currentpoint 6 2 roll pl curveto} def/V/v load def/y{pl 2 copy curveto} def/Y/y load def/l{pl lineto} def/L/l load def/m{pl moveto} def} ifelse/d{setdash} def/cfcurrentflat def/i{dup 0 eq	{	pop cf	} ifsetflat} def/j{setlinejoin} def/J{setlinecap} def/M{setmiterlimit} def/w{setlinewidth} def/H{} def/h{closepath} def/N{newpath} def/n/N load def/F{_pf} def/f{closepathF} def/S{_ps} def/s{closepathS} def/B{gsave F grestoreS} def/b{closepathB} def/W{clip} def/ta{_as moveto_tt aload pop 4 -2 roll} def/tl{_tl aload pop translate} def/as{{0 0}{2 copy _tt aload pop 4 -2 roll swexch neg 2 div exch neg 2 div}{2 copy _tt aload pop 4 -2 roll swexch neg exch neg}{0 0}} cvlit def/z{/_a exch ddef/_as as _a get ddef_a 2 le	{	0 _tt astore pop	0 exch neg _tl astore pop	}	{	0 exch neg _tt astore pop	neg 0 _tl astore pop	} ifelseexch findfont exch scalefont setfont} def/tm{_tm currentmatrix popconcat} def/I{tm/t	{	ta sp	tl	} ddef} def/o{tm/t	{	ta 4 npop	tl	newpath	} ddef} def/e{tm/t	{	ta _psf	tl	newpath	} ddef} def/r{tm/t	{	ta _tm _pss	tl	newpath	} ddef} def/a{tm/t	{	2 copy	ta _psf	newpath	ta _tm _pss	tl	newpath	} ddef} def/T{_tm setmatrix} def/Z{popfindfont begincurrentdict dup length 1 add dict begin	{	1 index /FID ne		{		def		}		{		2 npop		} ifelse	} forall/FontName exch def dup length 0 ne	{	/Encoding Encoding 256 array copy def	0 exch		{		dup type /nametype eq			{			Encoding 2 index 2 index put pop			1 add			}			{			exch pop			} ifelse		} forall	} if popcurrentdict dup end end/FontName get exch definefont pop} def/u{} def/U{} def/q{gsave} def/Q{grestore} def/`{/_i save ddef6 1 roll 4 npopconcatuserdict begin/showpage {} deffalse setoverprintpop} def/~{end_i restore} def/@{} def/&{} def/O{0 ne/_of exch ddef/_lp /none ddef} def/R{0 ne/_os exch ddef/_lp /none ddef} def/g{/_gf exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/G{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/k{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/K{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/x{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/X{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/dp{dup null eq{pop_dp 0 ne	{	0 1 _dp 1 sub _dl mod		{		_da exch get 3 get		} for	_dp 1 sub _dl mod 1 add packedarray	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll	definepattern pop	} if}{_dp 0 ne _dp _dl mod 0 eq and	{	null dp	} if7 packedarray _da exch _dp _dl mod exch put_dp _dl mod _da 0 get 4 get 2 packedarray/_dp _dp 1 add def} ifelse} def/E{_ed begindup 0 get type /arraytype ne	{	0		{		dup 1 add index type /arraytype eq			{			1 add			}			{			exit			} ifelse		} loop	array astore	} if/_dd exch def/_ury exch def/_urx exch def/_lly exch def/_llx exch def/_n exch def/_y 0 def/_dl 4 def/_dp 0 def/_da _dl array def0 1 _dd length 1 sub	{	/_d exch _dd exch get def	0 2 _d length 2 sub		{		/_x exch def		/_c _d _x get _ ne def		/_r _d _x 1 add get cvlit def		_r _ ne			{			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 				[				/save cvx				_llx neg _lly neg /translate cvx				_c					{					nc /begin cvx					} if				_r dup type /stringtype eq					{					cvx					}					{					{exec} /forall cvx					} ifelse				_c					{					/end cvx					} if				/restore cvx				] cvx			/_fn 12 _n length add string def			_y _fn cvs pop			/_y _y 1 add def			_fn 12 _n putinterval			_fn _c false dp			_d exch _x 1 add exch put			} if		} for	} fornull dp_n _dd /_pdend xput} def/fc{_fm dup concatmatrix pop} def/p{/_fm exch ddef9 -2 roll _pm translate fc7 -2 roll _pm scale fc5 -1 roll _pm rotate fc4 -2 roll exch 0 ne	{	dup _pm rotate fc	1 -1 _pm scale fc	neg _pm rotate fc	}	{	pop	} ifelsedup _pm rotate fcexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore fcneg _pm rotate fc_pd exch get /_fdd exch ddef/_pf{save0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			patternfill			}			{			pop			fill			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_psf{save0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			10 copy 6 npop exch pop patternashow			}			{			pop			7 copy 3 npop exch pop ashow			} ifelse		grestore		pop		} for	pop	} forrestore4 npop newpath} ddef/_lp /none ddef} def/sc{_sm dup concatmatrix pop} def/P{/_sm exch ddef9 -2 roll _pm translate sc7 -2 roll _pm scale sc5 -1 roll _pm rotate sc4 -2 roll exch 0 ne	{	dup _pm rotate sc	1 -1 _pm scale sc	neg _pm rotate sc	}	{	pop	} ifelsedup _pm rotate scexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore scneg _pm rotate sc_pd exch get /_sdd exch ddef/_ps{save0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			patternstroke			}			{			pop stroke			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_pss{save0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			11 copy 6 npop 3 -1 roll pop patternashowstroke			}			{			pop			8 copy 3 npop ss			} ifelse		grestore		pop		} for	pop	} forrestore5 npop newpath} ddef/_lp /none ddef} def/A{pop} def/nc 3 dict defnc begin/setgray{pop} bind def/setcmykcolor{4 npop} bind def/setcustomcolor{2 npop} bind defcurrentdict readonly pop endcurrentdict readonly pop endsetpacking%%EndProcSet%%EndProlog%%BeginSetupAdobe_cmykcolor /initialize get execAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_pattern /initialize get execAdobe_Illustrator88 /initialize get exec%%EndSetup0 A0 O0 R0 g0 G0 i 0 J 0 j 1 w 4 M [] 0 d60.471 104.088 m60.471 100.076 57.218 96.824 53.206 96.824 c49.194 96.824 45.941 100.076 45.941 104.088 c45.941 108.1 49.194 111.353 53.206 111.353 c57.218 111.353 60.471 108.1 60.471 104.088 c[] 0 d 1 j 1 J0.144 w 0 G S57.353 31.176 m57.353 28.902 55.509 27.059 53.235 27.059 c50.961 27.059 49.118 28.902 49.118 31.176 c49.118 33.451 50.961 35.294 53.235 35.294 c55.509 35.294 57.353 33.451 57.353 31.176 c[] 0 d 1 j 1 J0.144 w 0 G S53.235 104.059  m109.882 104.059  L[] 0 d 1 j 1 J0.144 w 0 G S65.941 104.088 m65.941 97.055 60.239 91.353 53.206 91.353 c46.172 91.353 40.471 97.055 40.471 104.088 c40.471 111.122 46.172 116.824 53.206 116.824 c60.239 116.824 65.941 111.122 65.941 104.088 c[] 0 d 1 j 1 J0.144 w 0 G S65.765 106.235  m109.882 105.118  L[] 0 d 1 j 1 J0.144 w 0 G S65.765 101.941  m109.882 103  L[] 0 d 1 j 1 J0.144 w 0 G S110.176 101.235  m110.059 101.235  L[] 0 d 1 j 1 J0.144 w 0 G S109.882 103  m110.183 103 110.459 103.106 110.647 103.294 c110.647 103.294  L110.835 103.52 110.941 103.796 110.941 104.059 c110.941 104.059  L110.941 104.36 110.835 104.636 110.647 104.824 c110.647 104.824  L110.459 105.049 110.183 105.155 109.882 105.118 c109.882 105.118  L[] 0 d 1 j 1 J0.144 w 0 G S60.294 31.147 m60.294 27.232 57.121 24.059 53.206 24.059 c49.291 24.059 46.118 27.232 46.118 31.147 c46.118 35.062 49.291 38.235 53.206 38.235 c57.121 38.235 60.294 35.062 60.294 31.147 c[] 0 d 1 j 1 J0.144 w 0 G S98.941 104.088 m98.941 101.116 96.531 98.706 93.559 98.706 c90.586 98.706 88.176 101.116 88.176 104.088 c88.176 107.061 90.586 109.471 93.559 109.471 c96.531 109.471 98.941 107.061 98.941 104.088 c1 g F98.941 104.088 m98.941 101.116 96.531 98.706 93.559 98.706 c90.586 98.706 88.176 101.116 88.176 104.088 c88.176 107.061 90.586 109.471 93.559 109.471 c96.531 109.471 98.941 107.061 98.941 104.088 c[] 0 d 1 j 1 J0.144 w 0 G S63.294 65.059 m63.294 60.998 59.989 57.706 55.912 57.706 c51.835 57.706 48.529 60.998 48.529 65.059 c48.529 69.12 51.835 72.412 55.912 72.412 c59.989 72.412 63.294 69.12 63.294 65.059 c[] 0 d 1 j 1 J0.144 w 0 G S55.941 65.059  m104.118 65.059  L[] 0 d 1 j 1 J0.144 w 0 G S67.235 65.059 m67.235 58.789 62.166 53.706 55.912 53.706 c49.658 53.706 44.588 58.789 44.588 65.059 c44.588 71.329 49.658 76.412 55.912 76.412 c62.166 76.412 67.235 71.329 67.235 65.059 c[] 0 d 1 j 1 J0.144 w 0 G S60.765 67.176  m103.765 66.118  L[] 0 d 1 j 1 J0.144 w 0 G S60.765 63.294  m103.765 64  L[] 0 d 1 j 1 J0.144 w 0 G S104.059 62.235  m104 62.235  L[] 0 d 1 j 1 J0.144 w 0 G S103.765 64  m104.065 64 104.341 64.106 104.529 64.294 c104.529 64.294  L104.755 64.482 104.882 64.758 104.882 65.059 c104.882 65.059  L104.882 65.322 104.755 65.598 104.529 65.824 c104.529 65.824  L104.341 66.011 104.065 66.118 103.765 66.118 c103.765 66.118  L[] 0 d 1 j 1 J0.144 w 0 G S92.824 65.029 m92.824 62.057 90.414 59.647 87.441 59.647 c84.469 59.647 82.059 62.057 82.059 65.029 c82.059 68.002 84.469 70.412 87.441 70.412 c90.414 70.412 92.824 68.002 92.824 65.029 c1 g F92.824 65.029 m92.824 62.057 90.414 59.647 87.441 59.647 c84.469 59.647 82.059 62.057 82.059 65.029 c82.059 68.002 84.469 70.412 87.441 70.412 c90.414 70.412 92.824 68.002 92.824 65.029 c[] 0 d 1 j 1 J0.144 w 0 G S60.765 67.176  m60.765 62.941  L[] 0 d 1 j 1 J0.144 w 0 G S46.647 31.176  m103.353 31.176  L[] 0 d 1 j 1 J0.144 w 0 G S59.941 33.294  m124.765 32.235  L[] 0 d 1 j 1 J0.144 w 0 G S59.941 29.059  m124.765 30.118  L[] 0 d 1 j 1 J0.144 w 0 G S103.647 28.353  m103.529 28.353  L[] 0 d 1 j 1 J0.144 w 0 G S124.765 30.118  m125.065 30.118 125.341 30.224 125.529 30.412 c125.529 30.412  L125.717 30.6 125.824 30.876 125.824 31.176 c125.824 31.176  L125.824 31.44 125.717 31.716 125.529 31.941 c125.529 31.941  L125.341 32.129 125.065 32.235 124.765 32.235 c124.765 32.235  L[] 0 d 1 j 1 J0.144 w 0 G S46.529 28.882  m22.824 28.882  L[] 0 d 1 j 1 J0.144 w 0 G S46.471 33.294  m22.706 33.294  L[] 0 d 1 j 1 J0.144 w 0 G S59.353 34.706  m59.623 34.282 59.968 33.917 60.353 33.647 c60.353 33.647  L60.777 33.416 61.264 33.274 61.765 33.235 c61.765 33.235  L[] 0 d 1 j 1 J0.144 w 0 G S61.765 29.059  m61.264 29.059 60.777 28.917 60.353 28.647 c60.353 28.647  L59.968 28.416 59.623 28.071 59.353 27.647 c59.353 27.647  L[] 0 d 1 j 1 J0.144 w 0 G S91.647 68.412  m92.151 67.792 92.793 67.27 93.529 66.882 c93.529 66.882  L94.266 66.534 95.089 66.333 95.941 66.294 c95.941 66.294  L[] 0 d 1 j 1 J0.144 w 0 G S96 63.882  m95.186 63.844 94.363 63.643 93.588 63.294 c93.588 63.294  L92.852 62.907 92.189 62.365 91.647 61.706 c91.647 61.706  L[] 0 d 1 j 1 J0.144 w 0 G S80.471 66.706  m80.972 66.667 81.458 66.769 81.882 67 c81.882 67  L82.307 67.231 82.671 67.576 82.941 68 c82.941 68  L[] 0 d 1 j 1 J0.144 w 0 G S82.824 62.235  m82.592 62.659 82.247 63.004 81.824 63.235 c81.824 63.235  L81.361 63.467 80.874 63.588 80.412 63.588 c80.412 63.588  L[] 0 d 1 j 1 J0.144 w 0 G S69.294 63.412  m68.72 63.412 68.165 63.227 67.706 62.882 c67.706 62.882  L67.208 62.538 66.838 62.045 66.647 61.471 c66.647 61.471  L[] 0 d 1 j 1 J0.144 w 0 G S66.588 68.824  m66.78 68.287 67.128 67.836 67.588 67.529 c67.588 67.529  L68.048 67.184 68.601 66.98 69.176 66.941 c69.176 66.941  L[] 0 d 1 j 1 J0.144 w 0 G S97.765 107.471  m98.268 106.812 98.911 106.29 99.647 105.941 c99.647 105.941  L100.383 105.554 101.206 105.353 102.059 105.353 c102.059 105.353  L[] 0 d 1 j 1 J0.144 w 0 G S102.059 102.824  m101.206 102.785 100.383 102.584 99.647 102.235 c99.647 102.235  L98.911 101.887 98.268 101.365 97.765 100.706 c97.765 100.706  L[] 0 d 1 j 1 J0.144 w 0 G S86.588 105.706  m87.09 105.706 87.576 105.827 88 106.059 c88 106.059  L88.424 106.29 88.789 106.614 89.059 107 c89.059 107  L[] 0 d 1 j 1 J0.144 w 0 G S89.059 101.176  m88.789 101.562 88.424 101.886 88 102.118 c88 102.118  L87.576 102.349 87.09 102.471 86.588 102.471 c86.588 102.471  L[] 0 d 1 j 1 J0.144 w 0 G S30 31.176 m30 28.837 28.104 26.941 25.765 26.941 c23.426 26.941 21.529 28.837 21.529 31.176 c21.529 33.516 23.426 35.412 25.765 35.412 c28.104 35.412 30 33.516 30 31.176 c1 g F30 31.176 m30 28.837 28.104 26.941 25.765 26.941 c23.426 26.941 21.529 28.837 21.529 31.176 c21.529 33.516 23.426 35.412 25.765 35.412 c28.104 35.412 30 33.516 30 31.176 c[] 0 d 1 j 1 J0.144 w 0 G S26.765 35.294  m29.468 34.628 32.218 34.117 35 33.765 c35 33.765  L37.782 33.451 40.591 33.294 43.412 33.294 c43.412 33.294  L[] 0 d 1 j 1 J0.144 w 0 G S42.765 28.882  m40.061 28.882 37.37 28.725 34.706 28.412 c34.706 28.412  L32.003 28.098 29.331 27.647 26.706 27.059 c26.706 27.059  L[] 0 d 1 j 1 J0.144 w 0 G S43.118 33.294  m43.969 33.294 44.814 33.495 45.588 33.882 c45.588 33.882  L46.401 34.269 47.085 34.813 47.588 35.471 c47.588 35.471  L[] 0 d 1 j 1 J0.144 w 0 G S47.647 26.765  m47.144 27.423 46.48 27.966 45.706 28.353 c45.706 28.353  L44.932 28.701 44.087 28.882 43.235 28.882 c43.235 28.882  L[] 0 d 1 j 1 J0.144 w 0 G S62.176 104.059  m57.353 104.059  L[] 0 d 1 j 1 J0.144 w 0 G S64.824 109.412  m65.246 108.451 65.939 107.635 66.824 107.059 c66.824 107.059  L67.708 106.482 68.747 106.156 69.824 106.118 c69.824 106.118  L[] 0 d 1 j 1 J0.144 w 0 G S69.824 102  m68.747 102 67.708 101.694 66.824 101.118 c66.824 101.118  L65.939 100.541 65.246 99.705 64.824 98.706 c64.824 98.706  L[] 0 d 1 j 1 J0.144 w 0 G S58 104.088 m58 101.441 55.854 99.294 53.206 99.294 c50.558 99.294 48.412 101.441 48.412 104.088 c48.412 106.736 50.558 108.882 53.206 108.882 c55.854 108.882 58 106.736 58 104.088 c[] 0 d 1 j 1 J0.144 w 0 G S53.235 108.235  m53.235 99.882  L[] 0 d 1 j 1 J0.144 w 0 G S55.529 108.235  m50.882 108.235  L[] 0 d 1 j 1 J0.144 w 0 G S54.824 99.588  m55.529 99.882  L[] 0 d 1 j 1 J0.144 w 0 G S54.824 99.588  m55.529 99.882  L[] 0 d 1 j 1 J0.144 w 0 G S50.882 99.882  m55.529 99.882  L[] 0 d 1 j 1 J0.144 w 0 G S191.941 91.353  m191.941 99.882  L189.647 99.882  L189.118 100.235  L188.647 100.647  L188.235 101.118  L187.882 101.647  L187.588 102.235  L187.353 102.824  L187.235 103.471  L187.176 104.059  L187.235 104.706  L187.353 105.353  L187.588 105.941  L187.882 106.529  L188.235 107.059  L188.647 107.529  L189.118 107.941  L189.647 108.235  L189.647 108.235  L191.941 108.235  L191.941 116.824  L191.353 116.824  L190.294 116.706  L188.176 116.235  L187.176 115.882  L186.176 115.471  L185.235 114.941  L184.353 114.294  L183.529 113.647  L182.765 112.882  L182.059 112.059  L181.412 111.176  L180.824 110.294  L180.353 109.294  L179.941 108.294  L179.647 107.294  L179.412 106.235  L179.294 105.176  L179.294 103  L179.412 101.941  L179.647 100.882  L179.941 99.824  L180.353 98.824  L180.824 97.882  L181.412 96.941  L182.059 96.059  L182.765 95.294  L183.529 94.529  L184.353 93.824  L185.235 93.235  L186.176 92.706  L187.176 92.235  L188.176 91.882  L190.294 91.412  L191.353 91.353  L1 g F249.706 103.824  m249.706 104.353  L249.412 104.824  L249.176 105  L248.941 105.118  L248.647 105.118  L240.824 105.353  L240.176 105.412  L239.588 105.471  L239 105.706  L238.412 105.941  L237.882 106.235  L237.412 106.588  L236.941 107  L236.529 107.471  L236.118 107.941  L235.588 108.353  L235.118 108.706  L234.529 109  L233.941 109.235  L233.294 109.353  L232.706 109.471  L231.412 109.412  L230.824 109.235  L230.176 109.059  L229.647 108.765  L229.118 108.412  L228.588 108  L228.176 107.529  L227.824 107  L227.353 106.471  L226.765 106.059  L226.059 105.765  L225.353 105.706  L208.588 106.118  L207.765 106.235  L207 106.412  L206.294 106.706  L205.588 107.059  L204.941 107.529  L204.412 108.118  L203.941 108.706  L203.529 109.412  L203.059 110.412  L202.471 111.294  L201.824 112.176  L201.118 112.941  L200.353 113.706  L199.471 114.412  L198.588 115  L197.647 115.529  L196.647 115.941  L195.647 116.294  L194.588 116.588  L193.529 116.765  L192.471 116.824  L191.941 116.824  L191.941 108.235  L194.294 108.235  L194.824 107.941  L195.294 107.529  L195.706 107.059  L196.059 106.529  L196.353 105.941  L196.588 105.353  L196.706 104.706  L196.765 104.059  L196.706 103.471  L196.588 102.824  L196.353 102.235  L196.059 101.647  L195.706 101.118  L195.294 100.647  L194.824 100.235  L194.294 99.882  L191.941 99.882  L191.941 91.353  L192.471 91.353  L193.529 91.412  L194.588 91.588  L195.647 91.882  L196.647 92.235  L197.647 92.647  L198.588 93.176  L199.471 93.765  L200.353 94.471  L201.118 95.176  L201.824 96  L202.471 96.882  L203.059 97.765  L203.529 98.706  L203.941 99.412  L204.412 100.059  L204.941 100.647  L205.588 101.118  L206.294 101.471  L207 101.765  L207.765 101.941  L208.588 102  L225.353 102.471  L225.353 102.471  L225.353 102.471  L226.059 102.353  L226.765 102.118  L227.353 101.706  L227.824 101.176  L228.176 100.647  L228.588 100.176  L229.118 99.765  L229.647 99.412  L230.176 99.118  L230.824 98.941  L231.412 98.765  L232.706 98.706  L233.294 98.765  L233.941 98.941  L234.529 99.176  L235.118 99.471  L235.588 99.824  L236.118 100.235  L236.529 100.706  L236.941 101.176  L237.412 101.588  L237.882 101.941  L238.412 102.235  L239 102.471  L239.588 102.647  L240.176 102.765  L240.824 102.824  L248.647 103  L248.941 103.059  L249.176 103.176  L249.412 103.294  L1 g F225.353 102.471  m208.588 102  L208.042 102 207.507 101.921 207 101.765 c206.493 101.609 206.017 101.391 205.588 101.118 c205.159 100.805 204.763 100.449 204.412 100.059 c204.061 99.669 203.764 99.213 203.529 98.706 c203.529 98.706  L202.945 97.421 202.13 96.228 201.118 95.176 c200.105 94.164 198.932 93.309 197.647 92.647 c196.362 92.024 194.97 91.606 193.529 91.412 c192.088 91.256 190.637 91.335 189.235 91.647 c187.833 91.959 186.482 92.495 185.235 93.235 c184.028 94.014 182.955 94.968 182.059 96.059 c181.124 97.188 180.409 98.46 179.941 99.824 c179.474 101.187 179.235 102.618 179.235 104.059 c179.235 105.5 179.474 106.931 179.941 108.294 c180.409 109.657 181.124 110.929 182.059 112.059 c182.955 113.188 184.028 114.162 185.235 114.941 c186.482 115.681 187.833 116.218 189.235 116.529 c190.637 116.841 192.088 116.92 193.529 116.765 c194.97 116.57 196.362 116.153 197.647 115.529 c198.932 114.867 200.105 113.993 201.118 112.941 c202.13 111.929 202.945 110.736 203.529 109.412 c203.529 109.412  L203.764 108.943 204.061 108.508 204.412 108.118 c204.763 107.688 205.159 107.332 205.588 107.059 c206.017 106.786 206.493 106.568 207 106.412 c207.507 106.256 208.042 106.157 208.588 106.118 c208.588 106.118  L225.353 105.706  L225.587 105.706 225.825 105.726 226.059 105.765 c226.293 105.843 226.53 105.942 226.765 106.059 c226.96 106.176 227.158 106.314 227.353 106.471 c227.509 106.627 227.667 106.805 227.824 107 c227.824 107  L228.058 107.352 228.315 107.687 228.588 108 c228.901 108.273 229.256 108.53 229.647 108.765 c229.999 108.96 230.394 109.118 230.824 109.235 c231.214 109.353 231.629 109.432 232.059 109.471 c232.489 109.471 232.903 109.431 233.294 109.353 c233.724 109.275 234.139 109.156 234.529 109 c234.92 108.805 235.276 108.587 235.588 108.353 c235.94 108.079 236.256 107.783 236.529 107.471 c236.529 107.471  L236.764 107.158 237.06 106.862 237.412 106.588 c237.725 106.314 238.06 106.098 238.412 105.941 c238.803 105.746 239.197 105.588 239.588 105.471 c239.979 105.392 240.393 105.353 240.824 105.353 c240.824 105.353  L248.647 105.118  L248.725 105.118 248.824 105.118 248.941 105.118 c249.019 105.079 249.098 105.039 249.176 105 c249.255 104.961 249.334 104.902 249.412 104.824 c249.49 104.784 249.549 104.705 249.588 104.588 c249.627 104.51 249.667 104.431 249.706 104.353 c249.706 104.275 249.706 104.176 249.706 104.059 c249.706 103.981 249.706 103.902 249.706 103.824 c249.667 103.706 249.627 103.608 249.588 103.529 c249.549 103.451 249.49 103.372 249.412 103.294 c249.334 103.255 249.255 103.216 249.176 103.176 c249.098 103.098 249.019 103.059 248.941 103.059 c248.824 103.02 248.725 103 248.647 103 c248.647 103  L240.824 102.824  L240.393 102.824 239.979 102.764 239.588 102.647 c239.197 102.569 238.803 102.431 238.412 102.235 c238.06 102.04 237.725 101.823 237.412 101.588 c237.06 101.314 236.764 101.019 236.529 100.706 c236.529 100.706  L236.256 100.393 235.94 100.097 235.588 99.824 c235.276 99.55 234.92 99.333 234.529 99.176 c234.139 98.981 233.724 98.843 233.294 98.765 c232.903 98.687 232.489 98.667 232.059 98.706 c231.629 98.706 231.214 98.785 230.824 98.941 c230.394 99.058 229.999 99.216 229.647 99.412 c229.256 99.607 228.901 99.864 228.588 100.176 c228.315 100.45 228.058 100.786 227.824 101.176 c227.824 101.176  L227.667 101.372 227.509 101.55 227.353 101.706 c227.158 101.862 226.96 102.001 226.765 102.118 c226.53 102.235 226.293 102.314 226.059 102.353 c225.825 102.431 225.587 102.471 225.353 102.471 c225.353 102.471  L[] 0 d 1 j 1 J0.144 w 0 G S189.647 108.235  m189.296 108.04 188.959 107.803 188.647 107.529 c188.335 107.217 188.078 106.881 187.882 106.529 c187.648 106.139 187.47 105.743 187.353 105.353 c187.236 104.923 187.176 104.488 187.176 104.059 c187.176 104.059  L187.176 103.629 187.236 103.214 187.353 102.824 c187.47 102.394 187.648 101.998 187.882 101.647 c188.078 101.296 188.335 100.959 188.647 100.647 c188.959 100.374 189.296 100.117 189.647 99.882 c189.647 99.882  L194.294 99.882  L194.646 100.117 194.982 100.374 195.294 100.647 c195.606 100.959 195.864 101.296 196.059 101.647 c196.293 101.998 196.471 102.394 196.588 102.824 c196.705 103.214 196.765 103.629 196.765 104.059 c196.765 104.059  L196.765 104.488 196.705 104.923 196.588 105.353 c196.471 105.743 196.293 106.139 196.059 106.529 c195.864 106.881 195.606 107.217 195.294 107.529 c194.982 107.803 194.646 108.04 194.294 108.235 c194.294 108.235  L189.647 108.235  L[] 0 d 1 j 1 J0.144 w 0 G S199.235 53.765  m199.235 57.706  L199.118 57.706  L197.765 57.824  L197.118 58  L196.529 58.176  L195.941 58.471  L195.353 58.765  L194.765 59.176  L194.294 59.588  L193.824 60.059  L193.353 60.588  L193 61.118  L192.647 61.706  L192.412 62.294  L192.176 62.941  L192 63.529  L191.882 64.235  L191.882 65.529  L191.941 66.176  L192.059 66.824  L192.294 67.471  L192.529 68.118  L192.824 68.706  L193.176 69.235  L193.588 69.765  L194 70.294  L194.529 70.706  L195.059 71.118  L195.588 71.471  L196.176 71.765  L196.824 72  L197.471 72.176  L198.765 72.412  L199.235 72.412  L199.235 76.412  L198.235 76.353  L196.294 76  L195.294 75.706  L194.412 75.294  L193.529 74.824  L192.706 74.294  L191.882 73.706  L191.176 73  L190.471 72.294  L189.882 71.471  L189.353 70.647  L188.941 69.765  L188.529 68.824  L188.235 67.882  L188.059 66.882  L187.941 65.941  L187.941 63.941  L188.059 62.941  L188.294 62  L188.647 61.059  L189 60.118  L189.471 59.235  L190.059 58.412  L190.647 57.647  L191.353 56.882  L192.059 56.235  L192.882 55.647  L193.706 55.118  L194.647 54.706  L195.529 54.353  L196.529 54.059  L198.471 53.765  L1 g F248.176 65.059  m248.176 65.059  L248.118 65.353  L247.882 65.824  L247.647 66  L247.353 66.059  L247.118 66.118  L239.235 66.294  L238.647 66.353  L238 66.471  L237.412 66.647  L236.882 66.882  L236.353 67.176  L235.824 67.529  L235.353 67.941  L234.941 68.412  L234.529 68.882  L234.059 69.294  L233.529 69.647  L232.941 69.941  L232.353 70.176  L231.765 70.353  L231.118 70.412  L229.882 70.353  L229.235 70.235  L228.647 70  L228.059 69.706  L227.529 69.353  L227.059 68.941  L226.647 68.471  L226.235 68  L225.765 67.412  L225.176 67  L224.529 66.765  L223.824 66.706  L212.529 66.941  L212.118 67  L211.647 67.118  L211.294 67.294  L210.941 67.529  L210.588 67.765  L210.294 68.118  L210.059 68.471  L209.941 68.824  L209.529 69.765  L209.059 70.647  L208.529 71.529  L207.941 72.294  L207.294 73.059  L206.529 73.706  L205.765 74.294  L204.941 74.882  L204.059 75.294  L203.118 75.706  L202.176 76  L201.176 76.235  L200.235 76.353  L199.235 76.412  L199.235 72.412  L199.412 72.412  L200.059 72.353  L200.765 72.235  L201.353 72.118  L202 71.882  L202.588 71.588  L203.176 71.294  L203.706 70.882  L204.235 70.471  L204.706 70  L205.118 69.471  L205.471 68.941  L205.824 68.353  L206.118 67.765  L206.294 67.118  L206.529 66.118  L206.588 65.059  L206.529 64.176  L206.412 63.294  L206.412 63.294  L206.412 63.294  L206.235 62.706  L205.941 62.059  L205.647 61.471  L205.294 60.882  L204.941 60.353  L204.471 59.882  L204 59.412  L203.471 59  L202.941 58.647  L202.353 58.353  L201.706 58.118  L201.059 57.941  L200.412 57.765  L199.765 57.706  L199.235 57.706  L199.235 53.765  L199.471 53.706  L200.471 53.765  L201.471 53.941  L202.412 54.176  L203.353 54.471  L204.235 54.882  L205.118 55.353  L205.941 55.941  L206.706 56.529  L207.471 57.235  L208.118 58  L208.706 58.824  L209.176 59.647  L209.647 60.529  L210 61.471  L210 61.471  L210 61.471  L210.176 61.882  L210.412 62.235  L210.647 62.588  L211 62.882  L211.353 63.118  L211.765 63.294  L212.176 63.353  L212.647 63.412  L223.706 63.588  L224.412 63.529  L225.118 63.235  L225.706 62.824  L226.176 62.235  L226.529 61.706  L226.941 61.235  L227.471 60.824  L228 60.412  L228.588 60.118  L229.176 59.882  L229.824 59.765  L231.059 59.647  L231.706 59.765  L232.353 59.882  L232.941 60.118  L233.529 60.412  L234.059 60.824  L234.529 61.235  L235 61.706  L235.412 62.176  L235.882 62.588  L236.353 62.941  L236.941 63.294  L237.471 63.529  L238.118 63.706  L238.706 63.824  L239.353 63.882  L247.118 64  L247.353 64  L247.647 64.118  L247.882 64.294  L248.118 64.765  L1 g F210 61.471  m209.572 60.225 208.935 59.051 208.118 58 c207.262 56.949 206.246 56.053 205.118 55.353 c203.989 54.652 202.755 54.175 201.471 53.941 c200.147 53.669 198.794 53.629 197.471 53.824 c196.147 54.057 194.873 54.495 193.706 55.118 c192.577 55.779 191.542 56.635 190.647 57.647 c189.791 58.659 189.114 59.814 188.647 61.059 c188.18 62.304 187.921 63.618 187.882 64.941 c187.882 66.264 188.101 67.578 188.529 68.824 c188.996 70.069 189.653 71.243 190.471 72.294 c191.327 73.306 192.362 74.162 193.529 74.824 c194.658 75.524 195.912 76.002 197.235 76.235 c198.558 76.469 199.892 76.469 201.176 76.235 c202.5 76.002 203.774 75.544 204.941 74.882 c206.07 74.182 207.085 73.306 207.941 72.294 c208.797 71.282 209.474 70.108 209.941 68.824 c209.941 68.824  L210.019 68.59 210.138 68.352 210.294 68.118 c210.489 67.884 210.707 67.685 210.941 67.529 c211.175 67.334 211.413 67.196 211.647 67.118 c211.92 67.04 212.217 66.98 212.529 66.941 c212.529 66.941  L223.824 66.706  L224.058 66.706 224.295 66.726 224.529 66.765 c224.764 66.804 224.981 66.883 225.176 67 c225.411 67.117 225.609 67.256 225.765 67.412 c225.96 67.568 226.118 67.766 226.235 68 c226.235 68  L226.47 68.352 226.746 68.668 227.059 68.941 c227.371 69.254 227.707 69.511 228.059 69.706 c228.45 69.94 228.845 70.118 229.235 70.235 c229.626 70.353 230.041 70.412 230.471 70.412 c230.9 70.451 231.335 70.431 231.765 70.353 c232.194 70.275 232.59 70.137 232.941 69.941 c233.332 69.785 233.707 69.568 234.059 69.294 c234.41 69.06 234.707 68.763 234.941 68.412 c234.941 68.412  L235.215 68.099 235.511 67.803 235.824 67.529 c236.136 67.295 236.491 67.078 236.882 66.882 c237.234 66.726 237.609 66.588 238 66.471 c238.43 66.353 238.844 66.294 239.235 66.294 c239.235 66.294  L247.118 66.118  L247.196 66.118 247.275 66.098 247.353 66.059 c247.47 66.059 247.569 66.039 247.647 66 c247.725 65.922 247.804 65.863 247.882 65.824 c247.921 65.745 247.961 65.666 248 65.588 c248.078 65.51 248.118 65.431 248.118 65.353 c248.157 65.236 248.176 65.137 248.176 65.059 c248.176 64.942 248.157 64.843 248.118 64.765 c248.118 64.687 248.078 64.608 248 64.529 c247.961 64.451 247.921 64.372 247.882 64.294 c247.804 64.216 247.725 64.157 247.647 64.118 c247.569 64.079 247.47 64.039 247.353 64 c247.275 64 247.196 64 247.118 64 c247.118 64  L239.353 63.882  L238.923 63.843 238.509 63.784 238.118 63.706 c237.688 63.589 237.293 63.45 236.941 63.294 c236.55 63.099 236.195 62.862 235.882 62.588 c235.531 62.315 235.235 62.019 235 61.706 c235 61.706  L234.727 61.354 234.41 61.058 234.059 60.824 c233.707 60.55 233.332 60.313 232.941 60.118 c232.55 59.961 232.136 59.843 231.706 59.765 c231.276 59.687 230.842 59.647 230.412 59.647 c229.982 59.686 229.567 59.765 229.176 59.882 c228.747 60.039 228.352 60.216 228 60.412 c227.609 60.646 227.254 60.923 226.941 61.235 c226.668 61.548 226.411 61.884 226.176 62.235 c226.176 62.235  L226.059 62.47 225.901 62.667 225.706 62.824 c225.511 62.98 225.313 63.118 225.118 63.235 c224.883 63.352 224.646 63.451 224.412 63.529 c224.177 63.568 223.94 63.588 223.706 63.588 c223.706 63.588  L212.647 63.412  L212.335 63.412 212.038 63.372 211.765 63.294 c211.492 63.177 211.234 63.038 211 62.882 c210.766 62.687 210.568 62.469 210.412 62.235 c210.217 62.001 210.078 61.743 210 61.471 c210 61.471  L[] 0 d 1 j 1 J0.144 w 0 G S206.412 63.294  m206.451 63.451 206.471 63.608 206.471 63.765 c206.51 63.882 206.529 64.02 206.529 64.176 c206.569 64.333 206.588 64.471 206.588 64.588 c206.588 64.745 206.588 64.902 206.588 65.059 c206.588 65.059  L206.588 65.216 206.588 65.392 206.588 65.588 c206.588 65.745 206.569 65.922 206.529 66.118 c206.49 66.274 206.451 66.431 206.412 66.588 c206.373 66.784 206.333 66.961 206.294 67.118 c206.294 67.118  L206.061 67.973 205.662 68.771 205.118 69.471 c204.573 70.171 203.915 70.789 203.176 71.294 c202.438 71.761 201.62 72.08 200.765 72.235 c199.87 72.43 198.973 72.47 198.118 72.353 c197.223 72.197 196.366 71.898 195.588 71.471 c194.811 71.043 194.133 70.465 193.588 69.765 c193.005 69.104 192.566 68.326 192.294 67.471 c191.983 66.654 191.843 65.777 191.882 64.882 c191.882 63.988 192.062 63.111 192.412 62.294 c192.723 61.478 193.201 60.72 193.824 60.059 c194.407 59.398 195.125 58.859 195.941 58.471 c196.719 58.082 197.576 57.823 198.471 57.706 c199.326 57.628 200.203 57.708 201.059 57.941 c201.914 58.136 202.732 58.495 203.471 59 c204.209 59.544 204.828 60.182 205.294 60.882 c205.8 61.621 206.178 62.439 206.412 63.294 c206.412 63.294  L[] 0 d 1 j 1 J0.144 w 0 G S203.765 24.118  m203.765 27.118  L202.941 27.118  L202.176 27.353  L201.471 27.765  L200.824 28.235  L200.353 28.882  L199.941 29.588  L199.706 30.353  L199.647 31.176  L199.706 31.941  L199.941 32.765  L200.353 33.471  L200.824 34.059  L201.471 34.588  L202.176 34.941  L202.941 35.176  L203.765 35.176  L203.765 38.235  L203.353 38.235  L202.471 38.118  L201.647 37.941  L200.824 37.647  L200.059 37.235  L199.353 36.706  L198.706 36.176  L198.118 35.471  L197.706 35  L197.235 34.588  L196.706 34.176  L196.176 33.882  L195.588 33.647  L195 33.471  L194.353 33.353  L193.706 33.294  L191.647 33.353  L189.588 33.412  L187.471 33.588  L185.412 33.824  L183.353 34.059  L181.353 34.412  L179.294 34.824  L177.294 35.294  L176.647 35.353  L176 35.412  L175.353 35.294  L174.765 35.118  L174.176 34.824  L173.647 34.471  L173.176 34.059  L172.471 33  L172.235 32.412  L172.118 31.824  L172.059 31.176  L172.059 31.176  L172.118 30.529  L172.235 29.941  L172.471 29.353  L173.176 28.294  L173.647 27.882  L174.176 27.471  L174.765 27.235  L175.353 27.059  L176 26.941  L176.588 26.941  L177.235 27.059  L181.235 27.824  L185.235 28.412  L189.235 28.765  L193.294 28.882  L193.765 28.882  L194.412 28.882  L195 28.765  L195.647 28.588  L196.235 28.353  L196.765 28  L197.294 27.647  L197.765 27.235  L198.176 26.765  L198.765 26.118  L199.412 25.529  L200.118 25.059  L200.941 24.647  L201.706 24.353  L202.588 24.176  L203.412 24.059  L1 g F276.412 31.176  m276.412 31.176  L276.353 31.471  L276.059 31.941  L275.824 32.118  L275.588 32.176  L275.294 32.235  L212.294 33.235  L211.588 33.353  L210.941 33.647  L210.353 34.118  L209.882 34.706  L209.412 35.412  L208.882 36.059  L208.235 36.647  L207.529 37.176  L206.765 37.588  L205.941 37.882  L205.118 38.118  L203.765 38.235  L203.765 35.176  L204.529 35.176  L205.294 34.941  L206.059 34.588  L206.647 34.059  L207.176 33.471  L207.529 32.765  L207.765 31.941  L207.882 31.176  L207.882 31.176  L207.882 31.176  L207.765 30.353  L207.529 29.588  L207.176 28.882  L206.647 28.235  L206.059 27.765  L205.294 27.353  L204.529 27.118  L203.765 27.118  L203.765 24.118  L205.118 24.235  L206 24.412  L206.765 24.765  L207.529 25.176  L208.235 25.706  L208.882 26.235  L209.412 26.941  L209.882 27.647  L210.353 28.235  L210.941 28.647  L211.588 28.941  L212.294 29.059  L275.294 30.118  L275.294 30.118  L275.294 30.118  L275.588 30.118  L275.824 30.235  L276.059 30.412  L276.353 30.882  L1 g F275.294 30.118  m212.294 29.059  L212.06 29.059 211.823 29.019 211.588 28.941 c211.354 28.902 211.136 28.803 210.941 28.647 c210.707 28.53 210.509 28.391 210.353 28.235 c210.158 28.04 209.999 27.842 209.882 27.647 c209.882 27.647  L209.609 27.139 209.273 26.665 208.882 26.235 c208.453 25.845 207.998 25.489 207.529 25.176 c207.061 24.864 206.547 24.607 206 24.412 c205.453 24.255 204.88 24.157 204.294 24.118 c203.708 24.079 203.135 24.098 202.588 24.176 c202.002 24.255 201.449 24.413 200.941 24.647 c200.394 24.881 199.881 25.178 199.412 25.529 c198.982 25.881 198.567 26.296 198.176 26.765 c198.176 26.765  L197.942 27.077 197.646 27.373 197.294 27.647 c196.981 27.921 196.626 28.157 196.235 28.353 c195.844 28.509 195.43 28.647 195 28.765 c194.609 28.843 194.195 28.882 193.765 28.882 c193.765 28.882  L193.294 28.882  L191.961 28.882 190.608 28.843 189.235 28.765 c187.902 28.686 186.568 28.569 185.235 28.412 c183.902 28.255 182.568 28.059 181.235 27.824 c179.902 27.627 178.568 27.372 177.235 27.059 c177.235 27.059  L176.806 26.942 176.39 26.902 176 26.941 c175.571 26.98 175.155 27.079 174.765 27.235 c174.336 27.391 173.959 27.609 173.647 27.882 c173.296 28.116 172.999 28.414 172.765 28.765 c172.531 29.116 172.352 29.512 172.235 29.941 c172.118 30.331 172.059 30.747 172.059 31.176 c172.059 31.605 172.118 32.022 172.235 32.412 c172.352 32.841 172.551 33.237 172.824 33.588 c173.058 33.939 173.335 34.237 173.647 34.471 c173.998 34.744 174.375 34.962 174.765 35.118 c175.155 35.274 175.571 35.373 176 35.412 c176.429 35.412 176.865 35.372 177.294 35.294 c177.294 35.294  L178.627 34.941 179.981 34.647 181.353 34.412 c182.686 34.177 184.039 33.98 185.412 33.824 c186.784 33.627 188.177 33.49 189.588 33.412 c190.961 33.333 192.334 33.294 193.706 33.294 c193.706 33.294  L194.136 33.294 194.57 33.353 195 33.471 c195.391 33.549 195.786 33.687 196.176 33.882 c196.567 34.078 196.923 34.315 197.235 34.588 c197.587 34.862 197.883 35.158 198.118 35.471 c198.118 35.471  L198.469 35.939 198.884 36.354 199.353 36.706 c199.822 37.097 200.316 37.413 200.824 37.647 c201.37 37.881 201.924 38.04 202.471 38.118 c203.057 38.235 203.649 38.274 204.235 38.235 c204.821 38.196 205.394 38.078 205.941 37.882 c206.488 37.726 207.022 37.489 207.529 37.176 c207.998 36.864 208.453 36.489 208.882 36.059 c209.273 35.668 209.609 35.214 209.882 34.706 c209.882 34.706  L209.999 34.472 210.158 34.274 210.353 34.118 c210.509 33.922 210.707 33.764 210.941 33.647 c211.136 33.53 211.354 33.431 211.588 33.353 c211.823 33.314 212.06 33.274 212.294 33.235 c212.294 33.235  L275.294 32.235  L275.411 32.235 275.51 32.216 275.588 32.176 c275.666 32.176 275.745 32.157 275.824 32.118 c275.902 32.04 275.981 31.98 276.059 31.941 c276.137 31.863 276.196 31.784 276.235 31.706 c276.274 31.628 276.314 31.549 276.353 31.471 c276.392 31.353 276.412 31.255 276.412 31.176 c276.412 31.059 276.392 30.96 276.353 30.882 c276.314 30.804 276.274 30.725 276.235 30.647 c276.196 30.569 276.137 30.49 276.059 30.412 c275.981 30.334 275.902 30.274 275.824 30.235 c275.745 30.196 275.666 30.157 275.588 30.118 c275.51 30.118 275.411 30.118 275.294 30.118 c275.294 30.118  L[] 0 d 1 j 1 J0.144 w 0 G S207.882 31.176  m207.882 31.72 207.762 32.26 207.529 32.765 c207.335 33.231 207.035 33.671 206.647 34.059 c206.259 34.447 205.799 34.747 205.294 34.941 c204.828 35.174 204.309 35.294 203.765 35.294 c203.221 35.294 202.681 35.174 202.176 34.941 c201.672 34.747 201.212 34.447 200.824 34.059 c200.435 33.671 200.135 33.231 199.941 32.765 c199.747 32.26 199.647 31.72 199.647 31.176 c199.647 31.176  L199.647 30.633 199.747 30.093 199.941 29.588 c200.135 29.083 200.435 28.624 200.824 28.235 c201.212 27.886 201.671 27.586 202.176 27.353 c202.682 27.159 203.221 27.059 203.765 27.059 c204.309 27.059 204.828 27.159 205.294 27.353 c205.799 27.586 206.259 27.886 206.647 28.235 c207.036 28.624 207.335 29.083 207.529 29.588 c207.763 30.093 207.882 30.633 207.882 31.176 c207.882 31.176  L[] 0 d 1 j 1 J0.144 w 0 G S%%TrailerAdobe_Illustrator88 /terminate get execAdobe_pattern /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_cmykcolor /terminate get execAdobe_packedarray /terminate get exec%%EOF