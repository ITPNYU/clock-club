%!PS-Adobe-2.0 EPSF-1.2%%Creator: Vectorworks 2018 SP3 [23.0.3(418943)] (64-Bit app)%%Title: clock-kit-shafts_thin.eps%%CreationDate: 6/19/2018%%DocumentProcSets: Adobe_packedarray 1.0 0%%DocumentSuppliedProcSets: Adobe_packedarray 1.0 0%%DocumentProcSets: Adobe_cmykcolor 1.1 0%%DocumentSuppliedProcSets: Adobe_cmykcolor 1.1 0%%DocumentProcSets: Adobe_cshow 1.1 0%%DocumentSuppliedProcSets: Adobe_cshow 1.1 0%%DocumentProcSets: Adobe_customcolor 1.0 0%%DocumentSuppliedProcSets: Adobe_customcolor 1.0 0%%DocumentProcSets: Adobe_pattern 1.9 0%%DocumentSuppliedProcSets: Adobe_pattern 1.9 0%%DocumentProcSets: Adobe_Illustrator88 1.19 0%%DocumentSuppliedProcSets: Adobe_Illustrator88 1.19 0%%BoundingBox:0 0 289 263%%TemplateBox:306 396 306 396%%DocumentPreview: Header%%EndComments%%BeginProlog%%BeginProcSet: Adobe_packedarray 1.0 0userdict /Adobe_packedarray 5 dict dup begin put/initialize{/packedarray where	{	pop	}	{	Adobe_packedarray begin	Adobe_packedarray		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end	} ifelse} def/terminate{} def/packedarray{array astore readonly} def/setpacking{pop} def/currentpacking{false} defcurrentdict readonly pop end%%EndProcSetAdobe_packedarray /initialize get exec%%BeginProcSet: Adobe_cmykcolor 1.1 0currentpacking true setpackinguserdict /Adobe_cmykcolor 4 dict dup begin put/initialize{/setcmykcolor where	{	pop	}	{	userdict /Adobe_cmykcolor_vars 2 dict dup begin put	/_setrgbcolor		/setrgbcolor load def	/_currentrgbcolor		/currentrgbcolor load def	Adobe_cmykcolor begin	Adobe_cmykcolor		{		dup xcheck			{			bind			} if		pop pop		} forall end end	Adobe_cmykcolor begin	} ifelse} def/terminate{currentdict Adobe_cmykcolor eq	{ end	} if} def/setcmykcolor{1 sub 4 1 roll3	{	3 index add neg dup 0 lt		{		pop 0		} if	3 1 roll	} repeatAdobe_cmykcolor_vars /_setrgbcolor get execpop} def /currentcmykcolor{Adobe_cmykcolor_vars /_currentrgbcolor get exec3	{	1 sub neg 3 1 roll	} repeat0} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_cshow 1.1 0currentpacking true setpackinguserdict /Adobe_cshow 3 dict dup begin put/initialize{/cshow where	{	pop	}	{	userdict /Adobe_cshow_vars 1 dict dup begin put	/_cshow		{} def	Adobe_cshow begin	Adobe_cshow		{		dup xcheck			{			bind			} if		userdict 3 1 roll put		} forall end end	} ifelse} def/terminate{} def/cshow{exchAdobe_cshow_vars	exch /_cshow	exch put	{	0 0 Adobe_cshow_vars /_cshow get exec	} forall} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_customcolor 1.0 0currentpacking true setpackinguserdict /Adobe_customcolor 5 dict dup begin put/initialize{/setcustomcolor where	{	pop	}	{	Adobe_customcolor begin	Adobe_customcolor		{		dup xcheck			{			bind			} if		pop pop		} forall end	Adobe_customcolor begin	} ifelse} def/terminate{currentdict Adobe_customcolor eq	{ end	} if} def/findcmykcustomcolor{5 packedarray}  def/setcustomcolor{exchaload pop pop4	{	4 index mul 4 1 roll	} repeat5 -1 roll popsetcmykcolor} def/setoverprint{pop} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_pattern 1.9 0currentpacking true setpackinguserdict /Adobe_pattern 14 dict dup begin put/initialize{/definepattern where	{	pop	}	{	Adobe_pattern begin	Adobe_pattern		{		dup xcheck			{			bind			} if		pop pop		} forall	mark	cachestatus 7 1 roll pop pop pop pop exch pop exch		{		{		10000 add		dup 2 index gt			{			break			} if		dup setcachelimit		} loop		} stopped	cleartomark	} ifelse} def/terminate{currentdict Adobe_pattern eq	{ end	} if} deferrordict/nocurrentpoint{popstop} puterrordict/invalidaccess{popstop} put/patternencoding256 array def0 1 255{patternencoding exch ( ) 2 copy exch 0 exch put cvn put} for/definepattern{17 dict begin/uniform exch def/cache exch def/key exch def/procarray exch def/mtx exch matrix invertmatrix def/height exch def/width exch def/ctm matrix currentmatrix def/ptm matrix def/str 32 string def/slice 9 dict defslice /s 1 putslice /q 256 procarray length div sqrt floor cvi putslice /b 0 put/FontBBox [0 0 0 0] def/FontMatrix mtx matrix copy def/Encoding patternencoding def/FontType 3 def/BuildChar	{	exch begin	slice begin	dup q dup mul mod s idiv /i exch def	dup q dup mul mod s mod /j exch def	q dup mul idiv procarray exch get	/xl j width s div mul def	/xg j 1 add width s div mul def	/yl i height s div mul def	/yg i 1 add height s div mul def	uniform		{		1 1		}		{		width 0 dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		0 height dtransform		dup mul exch dup mul add sqrt dup 1 add exch div		} ifelse	width 0 cache		{		xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul		setcachedevice		}		{		setcharwidth		} ifelse	gsave	scale	newpath	xl yl moveto	xg yl lineto	xg yg lineto	xl yg lineto	closepath	clip	newpath end end	exec	grestore	} defkey currentdict definefontend} def/patterncachesize{gsavenewpath0 0 movetowidth 0 linetowidth height lineto0 height linetoclosepathpatternmatrix setmatrixpathbboxexch ceiling 4 -1 roll floor sub 3 1 rollceiling exch floor submul 1 addgrestore} def/patterncachelimit{cachestatus 7 1 roll pop pop pop pop pop pop 8 mul} def/patternpath{exch dup begin setfontctm setmatrixconcatslice exch /b exch slice /q get dup mul mul putFontMatrix concatuniform	{	width 0 dtransform round width div exch round width div exch	0 height dtransform round height div exch height div exch	0 0 transform round exch round exch	ptm astore setmatrix	}	{	ptm currentmatrix pop	} ifelse{currentpoint} stopped not	{	pop pop	pathbbox	true	4 index 3 index eq	4 index 3 index eq	and		{		pop false			{			{pop pop}			{pop pop pop true}			{pop pop pop pop pop pop pop true}			{pop true}			pathforall			} stopped			{			pop pop pop pop pop true			} if		} if		{		height div ceiling height mul 4 1 roll		width div ceiling width mul 4 1 roll		height div floor height mul 4 1 roll		width div floor width mul 4 1 roll		2 index sub height div ceiling cvi exch		3 index sub width div ceiling cvi exch		4 2 roll moveto		FontMatrix mtx invertmatrix		dup dup 4 get exch 5 get rmoveto		ptm ptm concatmatrix pop		slice /s		patterncachesize patterncachelimit div ceiling sqrt ceiling cvi		dup slice /q get gt			{			pop slice /q get			} if		put		0 1 slice /s get dup mul 1 sub			{			slice /b get add			gsave			0 1 str length 1 sub				{				str exch 2 index put				} for			pop			dup				{				gsave				ptm setmatrix				1 index str length idiv {str show} repeat				1 index str length mod str exch 0 exch getinterval show				grestore				0 height rmoveto				} repeat			grestore			} for		pop pop		}		{		pop pop pop pop		} ifelse	} ifend} def/patternclip{clip} def/patternstrokepath{strokepath} def/patternmatrixmatrix def/patternfill{dup type /dicttype eq	{	Adobe_pattern /patternmatrix get	} ifgsavepatternclipAdobe_pattern /patternpath get execgrestorenewpath} def/patternstroke{dup type /dicttype eq	{	Adobe_pattern /patternmatrix get	} ifgsavepatternstrokepathtrue	{		{			{			newpath 			moveto			}			{			lineto			}			{			curveto			}			{			closepath			3 copy			Adobe_pattern /patternfill get exec			} pathforall		pop pop	pop		} stopped			{			pop pop pop pop pop			patternclip			Adobe_pattern /patternfill get exec			} if	}	{	patternclip	Adobe_pattern /patternfill get exec	} ifelsegrestorenewpath} def/patternashow{3 index type /dicttype eq	{	Adobe_pattern /patternmatrix get 4 1 roll	} if	{	pop pop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	6 index 6 index 6 index	Adobe_pattern /patternfill get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshowpop pop pop pop pop} def/patternashowstroke{4 index type /dicttype eq	{	patternmatrix /patternmatrix get 5 1 roll	} if4 1 roll	{	pop pop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	7 index 7 index 7 index	Adobe_pattern /patternstroke get exec	grestore	newpath moveto	2 copy rmoveto	} exch cshowpop pop pop pop pop pop} defcurrentdict readonly pop endsetpacking%%EndProcSet%%BeginProcSet: Adobe_Illustrator88 1.19 0currentpacking true setpackinguserdict /Adobe_Illustrator88 73 dict dup begin put/initialize{userdict /Adobe_Illustrator88_vars 31 dict dup begin put/_lp /none def/_pf {} def/_ps {} def/_psf {} def/_pss {} def/_a null def/_as null def/_tt 2 array def/_tl 2 array def/_tm matrix def/t {} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc {} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc {} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null defAdobe_Illustrator88 beginAdobe_Illustrator88 dup /nc get begin	{	dup xcheck		{		bind		} if	pop pop	} forallendendendAdobe_Illustrator88 beginAdobe_Illustrator88_vars beginnewpath} def/terminate{endend} def/_null def/ddef{Adobe_Illustrator88_vars 3 1 roll put} def/xput{dup load dup length exch maxlength eq	{	dup dup load dup	length 2 mul dict copy def	} ifload begin def end} def/npop{	{	pop	} repeat} def/sw{stringwidthexch 5 -1 roll 3 index 1 sub mul add4 1 roll 3 1 roll 1 sub mul add} def/ss{3 -1 roll pop4 1 roll	{	2 npop (0) exch	2 copy 0 exch put pop	gsave	false charpath	currentpoint	4 index setmatrix	stroke	grestore	moveto	2 copy rmoveto	} exch cshow3 npop} def/sp{exch pop	{	2 npop (0) exch	2 copy 0 exch put pop	false charpath	2 copy rmoveto	} exch cshow2 npop} def/pl{transform0.25 sub round 0.25 add exch0.25 sub round 0.25 add exchitransform} def/setstrokeadjust where{pop true setstrokeadjust/c{curveto} def/C/c load def/v{currentpoint 6 2 roll curveto} def/V/v load def/y{2 copy curveto} def/Y/y load def/l{lineto} def/L/l load def/m{moveto} def}{/c{pl curveto} def/C/c load def/v{currentpoint 6 2 roll pl curveto} def/V/v load def/y{pl 2 copy curveto} def/Y/y load def/l{pl lineto} def/L/l load def/m{pl moveto} def} ifelse/d{setdash} def/cfcurrentflat def/i{dup 0 eq	{	pop cf	} ifsetflat} def/j{setlinejoin} def/J{setlinecap} def/M{setmiterlimit} def/w{setlinewidth} def/H{} def/h{closepath} def/N{newpath} def/n/N load def/F{_pf} def/f{closepathF} def/S{_ps} def/s{closepathS} def/B{gsave F grestoreS} def/b{closepathB} def/W{clip} def/ta{_as moveto_tt aload pop 4 -2 roll} def/tl{_tl aload pop translate} def/as{{0 0}{2 copy _tt aload pop 4 -2 roll swexch neg 2 div exch neg 2 div}{2 copy _tt aload pop 4 -2 roll swexch neg exch neg}{0 0}} cvlit def/z{/_a exch ddef/_as as _a get ddef_a 2 le	{	0 _tt astore pop	0 exch neg _tl astore pop	}	{	0 exch neg _tt astore pop	neg 0 _tl astore pop	} ifelseexch findfont exch scalefont setfont} def/tm{_tm currentmatrix popconcat} def/I{tm/t	{	ta sp	tl	} ddef} def/o{tm/t	{	ta 4 npop	tl	newpath	} ddef} def/e{tm/t	{	ta _psf	tl	newpath	} ddef} def/r{tm/t	{	ta _tm _pss	tl	newpath	} ddef} def/a{tm/t	{	2 copy	ta _psf	newpath	ta _tm _pss	tl	newpath	} ddef} def/T{_tm setmatrix} def/Z{popfindfont begincurrentdict dup length 1 add dict begin	{	1 index /FID ne		{		def		}		{		2 npop		} ifelse	} forall/FontName exch def dup length 0 ne	{	/Encoding Encoding 256 array copy def	0 exch		{		dup type /nametype eq			{			Encoding 2 index 2 index put pop			1 add			}			{			exch pop			} ifelse		} forall	} if popcurrentdict dup end end/FontName get exch definefont pop} def/u{} def/U{} def/q{gsave} def/Q{grestore} def/`{/_i save ddef6 1 roll 4 npopconcatuserdict begin/showpage {} deffalse setoverprintpop} def/~{end_i restore} def/@{} def/&{} def/O{0 ne/_of exch ddef/_lp /none ddef} def/R{0 ne/_os exch ddef/_lp /none ddef} def/g{/_gf exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_gf setgray	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/G{/_gs exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_gs setgray	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/k{_cf astore pop/_fc{_lp /fill ne	{	_of setoverprint	_cf aload pop setcmykcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/K{_cs astore pop/_sc{_lp /stroke ne	{	_os setoverprint	_cs aload pop setcmykcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/x{/_gf exch ddeffindcmykcustomcolor/_if exch ddef/_fc{_lp /fill ne	{	_of setoverprint	_if _gf 1 exch sub setcustomcolor	/_lp /fill ddef	} if} ddef/_pf{_fcfill} ddef/_psf{_fcexch popashow} ddef/_lp /none ddef} def/X{/_gs exch ddeffindcmykcustomcolor/_is exch ddef/_sc{_lp /stroke ne	{	_os setoverprint	_is _gs 1 exch sub setcustomcolor	/_lp /stroke ddef	} if} ddef/_ps{_scstroke} ddef/_pss{_scss} ddef/_lp /none ddef} def/dp{dup null eq{pop_dp 0 ne	{	0 1 _dp 1 sub _dl mod		{		_da exch get 3 get		} for	_dp 1 sub _dl mod 1 add packedarray	_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll	definepattern pop	} if}{_dp 0 ne _dp _dl mod 0 eq and	{	null dp	} if7 packedarray _da exch _dp _dl mod exch put_dp _dl mod _da 0 get 4 get 2 packedarray/_dp _dp 1 add def} ifelse} def/E{_ed begindup 0 get type /arraytype ne	{	0		{		dup 1 add index type /arraytype eq			{			1 add			}			{			exit			} ifelse		} loop	array astore	} if/_dd exch def/_ury exch def/_urx exch def/_lly exch def/_llx exch def/_n exch def/_y 0 def/_dl 4 def/_dp 0 def/_da _dl array def0 1 _dd length 1 sub	{	/_d exch _dd exch get def	0 2 _d length 2 sub		{		/_x exch def		/_c _d _x get _ ne def		/_r _d _x 1 add get cvlit def		_r _ ne			{			_urx _llx sub _ury _lly sub [1 0 0 1 0 0] 				[				/save cvx				_llx neg _lly neg /translate cvx				_c					{					nc /begin cvx					} if				_r dup type /stringtype eq					{					cvx					}					{					{exec} /forall cvx					} ifelse				_c					{					/end cvx					} if				/restore cvx				] cvx			/_fn 12 _n length add string def			_y _fn cvs pop			/_y _y 1 add def			_fn 12 _n putinterval			_fn _c false dp			_d exch _x 1 add exch put			} if		} for	} fornull dp_n _dd /_pdend xput} def/fc{_fm dup concatmatrix pop} def/p{/_fm exch ddef9 -2 roll _pm translate fc7 -2 roll _pm scale fc5 -1 roll _pm rotate fc4 -2 roll exch 0 ne	{	dup _pm rotate fc	1 -1 _pm scale fc	neg _pm rotate fc	}	{	pop	} ifelsedup _pm rotate fcexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore fcneg _pm rotate fc_pd exch get /_fdd exch ddef/_pf{save0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			patternfill			}			{			pop			fill			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_psf{save0 1 _fdd length 1 sub	{	/_fd exch _fdd exch get ddef	_fd	0 2 _fd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _fc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _fm			10 copy 6 npop exch pop patternashow			}			{			pop			7 copy 3 npop exch pop ashow			} ifelse		grestore		pop		} for	pop	} forrestore4 npop newpath} ddef/_lp /none ddef} def/sc{_sm dup concatmatrix pop} def/P{/_sm exch ddef9 -2 roll _pm translate sc7 -2 roll _pm scale sc5 -1 roll _pm rotate sc4 -2 roll exch 0 ne	{	dup _pm rotate sc	1 -1 _pm scale sc	neg _pm rotate sc	}	{	pop	} ifelsedup _pm rotate scexch dup sin exch cos div 1 0 0 1 0 6 2 roll_pm astore scneg _pm rotate sc_pd exch get /_sdd exch ddef/_ps{save0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			patternstroke			}			{			pop stroke			} ifelse		grestore		pop		} for	pop	} forrestorenewpath} ddef/_pss{save0 1 _sdd length 1 sub	{	/_sd exch _sdd exch get ddef	_sd	0 2 _sd length 2 sub		{		gsave		2 copy get dup _ ne			{			cvx exec _sc			}			{			pop			} ifelse		2 copy 1 add get dup _ ne			{			aload pop findfont _sm			11 copy 6 npop 3 -1 roll pop patternashowstroke			}			{			pop			8 copy 3 npop ss			} ifelse		grestore		pop		} for	pop	} forrestore5 npop newpath} ddef/_lp /none ddef} def/A{pop} def/nc 3 dict defnc begin/setgray{pop} bind def/setcmykcolor{4 npop} bind def/setcustomcolor{2 npop} bind defcurrentdict readonly pop endcurrentdict readonly pop endsetpacking%%EndProcSet%%EndProlog%%BeginSetupAdobe_cmykcolor /initialize get execAdobe_cshow /initialize get execAdobe_customcolor /initialize get execAdobe_pattern /initialize get execAdobe_Illustrator88 /initialize get exec%%EndSetup0 A0 O0 R0 g0 G0 i 0 J 0 j 1 w 4 M [] 0 d72.941 46.176 m72.941 43.902 71.098 42.059 68.824 42.059 c66.549 42.059 64.706 43.902 64.706 46.176 c64.706 48.451 66.549 50.294 68.824 50.294 c71.098 50.294 72.941 48.451 72.941 46.176 c[] 0 d 1 j 1 J0.144 w 0 G S68.824 119.118  m125.529 119.118  L[] 0 d 1 j 1 J0.144 w 0 G S125.824 116.294  m125.706 116.294  L[] 0 d 1 j 1 J0.144 w 0 G S76.176 80.088 m76.176 76.011 72.884 72.706 68.824 72.706 c64.763 72.706 61.471 76.011 61.471 80.088 c61.471 84.165 64.763 87.471 68.824 87.471 c72.884 87.471 76.176 84.165 76.176 80.088 c[] 0 d 1 j 1 J0.144 w 0 G S71.529 80.059  m119.706 80.059  L[] 0 d 1 j 1 J0.144 w 0 G S119.706 77.235  m119.588 77.235  L[] 0 d 1 j 1 J0.144 w 0 G S119.235 43.353  m119.118 43.353  L[] 0 d 1 j 1 J0.144 w 0 G S77.824 119.118  m72.941 119.118  L[] 0 d 1 j 1 J0.144 w 0 G S73.588 119.118 m73.588 116.486 71.455 114.353 68.824 114.353 c66.192 114.353 64.059 116.486 64.059 119.118 c64.059 121.749 66.192 123.882 68.824 123.882 c71.455 123.882 73.588 121.749 73.588 119.118 c[] 0 d 1 j 1 J0.144 w 0 G S71.118 123.294  m66.529 123.294  L[] 0 d 1 j 1 J0.144 w 0 G S55.882 229.176  m60.471 229.176  L[] 0 d 1 j 1 J0.144 w 0 G S267.235 46.176  m40.471 46.176  L[] 0 d 1 j 1 J0.144 w 0 G S40.471 119.118  m182.176 119.118  L[] 0 d 1 j 1 J0.144 w 0 G S238.882 80.059  m40.471 80.059  L[] 0 d 1 j 1 J0.144 w 0 G S68.824 119.118  m68.824 22.412  L[] 0 d 1 j 1 J0.144 w 0 G S50.412 80.088 m50.412 74.614 45.961 70.176 40.471 70.176 c34.98 70.176 30.529 74.614 30.529 80.088 c30.529 85.562 34.98 90 40.471 90 c45.961 90 50.412 85.562 50.412 80.088 c[] 0 d 1 j 1 J0.144 w 0 G S50.412 119.118 m50.412 113.627 45.961 109.176 40.471 109.176 c34.98 109.176 30.529 113.627 30.529 119.118 c30.529 124.608 34.98 129.059 40.471 129.059 c45.961 129.059 50.412 124.608 50.412 119.118 c[] 0 d 1 j 1 J0.144 w 0 G S50.412 46.206 m50.412 40.732 45.961 36.294 40.471 36.294 c34.98 36.294 30.529 40.732 30.529 46.206 c30.529 51.68 34.98 56.118 40.471 56.118 c45.961 56.118 50.412 51.68 50.412 46.206 c[] 0 d 1 j 1 J0.144 w 0 G S180.059 117  m181.228 117 182.176 117.948 182.176 119.118 c182.176 119.118  L182.176 120.287 181.228 121.235 180.059 121.235 c180.059 121.235  L[] 0 d 1 j 1 J0.144 w 0 G S236.765 77.941  m237.934 77.941 238.882 78.889 238.882 80.059 c238.882 80.059  L238.882 81.261 237.934 82.235 236.765 82.235 c236.765 82.235  L[] 0 d 1 j 1 J0.144 w 0 G S265.118 44.059  m266.287 44.059 267.235 45.007 267.235 46.176 c267.235 46.176  L267.235 47.346 266.287 48.294 265.118 48.294 c265.118 48.294  L[] 0 d 1 j 1 J0.144 w 0 G S46.941 126.588  m180.059 121.235  L[] 0 d 1 j 1 J0.144 w 0 G S46.941 111.588  m180.059 117  L[] 0 d 1 j 1 J0.144 w 0 G S43.235 89.588  m236.765 82.235  L[] 0 d 1 j 1 J0.144 w 0 G S43.235 70.529  m236.765 77.941  L[] 0 d 1 j 1 J0.144 w 0 G S48.588 51.882  m265.118 48.294  L[] 0 d 1 j 1 J0.144 w 0 G S20.294 40.529  m265.118 44.059  L[] 0 d 1 j 1 J0.144 w 0 G Su84.706 84.412  m83.538 84.412 82.438 83.946 81.647 83.118 c81.647 83.118  L80.856 82.327 80.412 81.226 80.412 80.059 c80.412 80.059  L80.449 78.929 80.936 77.85 81.765 77.059 c81.765 77.059  L82.593 76.268 83.694 75.845 84.824 75.882 c84.824 75.882  L[] 0 d 1 j 1 J0.144 w 0 G S187.471 79.176  m187.993 79.209 188.386 79.654 188.353 80.176 c188.353 80.176  L188.353 80.699 187.934 81.118 187.412 81.118 c187.412 81.118  L[] 0 d 1 j 1 J0.144 w 0 G S84.706 84.412  m187.412 81.118  L[] 0 d 1 j 1 J0.144 w 0 G S84.824 75.882  m187.471 79.176  L[] 0 d 1 j 1 J0.144 w 0 G SUu83.294 122.882  m83.216 122.882 83.118 122.882 83 122.882 c83 122.882  L82.922 122.843 82.824 122.824 82.706 122.824 c82.706 122.824  L82.627 122.784 82.549 122.745 82.471 122.706 c82.471 122.706  L82.353 122.667 82.255 122.627 82.176 122.588 c82.176 122.588  L82.098 122.549 82.02 122.49 81.941 122.412 c81.941 122.412  L81.863 122.373 81.784 122.314 81.706 122.235 c81.706 122.235  L81.627 122.157 81.549 122.078 81.471 122 c81.471 122  L81.392 121.922 81.314 121.843 81.235 121.765 c81.235 121.765  L81.196 121.686 81.137 121.588 81.059 121.471 c81.059 121.471  L81.02 121.392 80.961 121.294 80.882 121.176 c80.882 121.176  L80.843 121.059 80.804 120.941 80.765 120.824 c80.765 120.824  L80.725 120.745 80.686 120.647 80.647 120.529 c80.647 120.529  L80.608 120.412 80.569 120.294 80.529 120.176 c80.529 120.176  L80.529 120.059 80.51 119.941 80.471 119.824 c80.471 119.824  L80.471 119.667 80.471 119.529 80.471 119.412 c80.471 119.412  L80.431 119.294 80.412 119.176 80.412 119.059 c80.412 119.059  L80.451 118.941 80.471 118.824 80.471 118.706 c80.471 118.706  L80.471 118.549 80.49 118.412 80.529 118.294 c80.529 118.294  L80.529 118.176 80.549 118.059 80.588 117.941 c80.588 117.941  L80.627 117.824 80.667 117.706 80.706 117.588 c80.706 117.588  L80.745 117.471 80.784 117.373 80.824 117.294 c80.824 117.294  L80.863 117.176 80.902 117.059 80.941 116.941 c80.941 116.941  L81.02 116.863 81.078 116.765 81.118 116.647 c81.118 116.647  L81.196 116.569 81.275 116.49 81.353 116.412 c81.353 116.412  L81.392 116.294 81.451 116.196 81.529 116.118 c81.529 116.118  L81.608 116.039 81.686 115.98 81.765 115.941 c81.765 115.941  L81.843 115.863 81.922 115.804 82 115.765 c82 115.765  L82.078 115.686 82.176 115.627 82.294 115.588 c82.294 115.588  L82.373 115.549 82.451 115.51 82.529 115.471 c82.529 115.471  L82.647 115.431 82.745 115.412 82.824 115.412 c82.824 115.412  L82.902 115.373 83 115.353 83.118 115.353 c83.118 115.353  L83.196 115.353 83.294 115.353 83.412 115.353 c83.412 115.353  L[] 0 d 1 j 1 J0.144 w 0 G S152.294 118.294  m152.294 118.294 152.314 118.294 152.353 118.294 c152.353 118.294  L152.353 118.294 152.373 118.294 152.412 118.294 c152.412 118.294  L152.412 118.294 152.431 118.294 152.471 118.294 c152.471 118.294  L152.471 118.333 152.49 118.353 152.529 118.353 c152.529 118.353  L152.529 118.353 152.549 118.373 152.588 118.412 c152.588 118.412  L152.588 118.412 152.608 118.412 152.647 118.412 c152.647 118.412  L152.647 118.451 152.647 118.471 152.647 118.471 c152.647 118.471  L152.686 118.51 152.706 118.529 152.706 118.529 c152.706 118.529  L152.745 118.569 152.765 118.588 152.765 118.588 c152.765 118.588  L152.765 118.627 152.765 118.647 152.765 118.647 c152.765 118.647  L152.804 118.686 152.824 118.706 152.824 118.706 c152.824 118.706  L152.824 118.745 152.824 118.784 152.824 118.824 c152.824 118.824  L152.863 118.824 152.882 118.843 152.882 118.882 c152.882 118.882  L152.882 118.922 152.882 118.941 152.882 118.941 c152.882 118.941  L152.882 118.98 152.882 119.02 152.882 119.059 c152.882 119.059  L152.882 119.059 152.882 119.078 152.882 119.118 c152.882 119.118  L152.882 119.157 152.882 119.176 152.882 119.176 c152.882 119.176  L152.882 119.216 152.882 119.255 152.882 119.294 c152.882 119.294  L152.882 119.333 152.882 119.353 152.882 119.353 c152.882 119.353  L152.843 119.392 152.824 119.412 152.824 119.412 c152.824 119.412  L152.824 119.451 152.824 119.49 152.824 119.529 c152.824 119.529  L152.824 119.529 152.804 119.549 152.765 119.588 c152.765 119.588  L152.765 119.588 152.765 119.608 152.765 119.647 c152.765 119.647  L152.725 119.686 152.706 119.706 152.706 119.706 c152.706 119.706  L152.706 119.745 152.686 119.765 152.647 119.765 c152.647 119.765  L152.647 119.765 152.627 119.784 152.588 119.824 c152.588 119.824  L152.588 119.824 152.569 119.824 152.529 119.824 c152.529 119.824  L152.529 119.863 152.51 119.882 152.471 119.882 c152.471 119.882  L152.471 119.882 152.451 119.902 152.412 119.941 c152.412 119.941  L152.412 119.941 152.392 119.941 152.353 119.941 c152.353 119.941  L152.353 119.941 152.333 119.941 152.294 119.941 c152.294 119.941  L152.294 119.941 152.275 119.941 152.235 119.941 c152.235 119.941  L[] 0 d 1 j 1 J0.144 w 0 G S83.294 122.882  m152.235 119.941  L[] 0 d 1 j 1 J0.144 w 0 G S83.412 115.353  m152.294 118.294  L[] 0 d 1 j 1 J0.144 w 0 G SU44.941 127.941  m45.841 127.511 46.787 127.156 47.765 126.882 c47.765 126.882  L48.742 126.648 49.748 126.51 50.765 126.471 c50.765 126.471  L[] 0 d 1 j 1 J0.144 w 0 G S50.765 111.765  m49.748 111.726 48.742 111.568 47.765 111.294 c47.765 111.294  L46.787 111.059 45.841 110.705 44.941 110.235 c44.941 110.235  L[] 0 d 1 j 1 J0.144 w 0 G S42.412 89.824  m42.765 89.745 43.137 89.686 43.529 89.647 c43.529 89.647  L43.882 89.608 44.235 89.569 44.588 89.529 c44.588 89.529  L[] 0 d 1 j 1 J0.144 w 0 G S44.588 70.588  m44.235 70.588 43.882 70.569 43.529 70.529 c43.529 70.529  L43.137 70.49 42.765 70.431 42.412 70.353 c42.412 70.353  L[] 0 d 1 j 1 J0.144 w 0 G S46.176 54.353  m47.307 53.534 48.556 52.9 49.882 52.471 c49.882 52.471  L51.208 52.042 52.596 51.804 54 51.765 c54 51.765  L[] 0 d 1 j 1 J0.144 w 0 G S54.647 41  m53.166 41 51.697 40.762 50.294 40.294 c50.294 40.294  L48.891 39.826 47.581 39.132 46.412 38.235 c46.412 38.235  L[] 0 d 1 j 1 J0.144 w 0 G S58.176 226.765  m58.176 229.176  L55.882 229.176  L55.353 229.529  L54.824 229.941  L54.412 230.412  L54.059 230.941  L53.765 231.529  L53.588 232.118  L53.471 232.706  L53.412 233.353  L53.471 234  L53.588 234.647  L53.765 235.235  L54.059 235.765  L54.412 236.294  L54.824 236.765  L55.353 237.176  L55.882 237.529  L58.176 237.529  L58.176 240  L40.118 240.706  L38.588 240.824  L37.118 241.176  L35.706 241.588  L34.294 242.235  L33.529 242.588  L32.765 242.824  L31.941 243.059  L31.118 243.176  L30.235 243.294  L29.412 243.294  L28.588 243.176  L27.765 243.059  L26.941 242.824  L26.118 242.588  L25.353 242.235  L24.647 241.824  L23.941 241.353  L23.294 240.824  L22.647 240.235  L21.588 238.941  L21.176 238.176  L20.765 237.471  L20.471 236.647  L20.235 235.882  L20.059 235.059  L19.941 234.176  L19.882 233.353  L19.882 233.353  L19.941 232.529  L20.059 231.706  L20.235 230.882  L20.471 230.059  L20.765 229.294  L21.176 228.529  L21.588 227.824  L22.647 226.471  L23.294 225.941  L23.941 225.412  L24.647 224.882  L25.353 224.529  L26.118 224.176  L26.941 223.882  L27.765 223.647  L28.588 223.529  L29.412 223.471  L30.235 223.471  L31.118 223.529  L31.941 223.647  L32.765 223.882  L33.529 224.176  L34.294 224.529  L35.706 225.118  L37.118 225.588  L38.588 225.882  L40.118 226  L1 g F106 228.706  m106 231.059  L72.765 229.588  L72.765 229.588  L72.471 229.588  L72.471 229.588  L72.176 229.647  L72.176 229.647  L71.882 229.706  L71.882 229.706  L71.647 229.824  L71.647 229.824  L71.353 230  L71.353 230  L71.118 230.176  L71.118 230.176  L70.882 230.412  L70.882 230.412  L70.706 230.647  L70.706 230.647  L70.471 230.882  L70.471 230.882  L70.294 231.176  L70.294 231.176  L70.176 231.529  L70.176 231.529  L70.059 231.824  L70.059 231.824  L69.941 232.176  L69.941 232.176  L69.882 232.588  L69.882 232.588  L69.824 232.941  L69.824 232.941  L69.824 233.294  L69.824 233.294  L69.824 233.353  L69.824 233.353  L69.824 233.647  L69.824 233.647  L69.824 234.059  L69.824 234.059  L69.882 234.412  L69.882 234.412  L70 234.765  L70 234.765  L70.118 235.118  L70.118 235.118  L70.235 235.412  L70.235 235.412  L70.412 235.706  L70.412 235.706  L70.588 236  L70.588 236  L70.824 236.235  L70.824 236.235  L71.059 236.471  L71.059 236.471  L71.294 236.706  L71.294 236.706  L71.529 236.824  L71.529 236.824  L71.824 236.941  L71.824 236.941  L72.118 237.059  L72.118 237.059  L72.353 237.118  L72.353 237.118  L72.647 237.118  L106 235.706  L106 238.059  L58.176 240  L58.176 237.529  L60.471 237.529  L61 237.176  L61.529 236.765  L61.941 236.294  L62.294 235.765  L62.588 235.235  L62.765 234.647  L62.882 234  L62.941 233.353  L62.882 232.706  L62.765 232.118  L62.588 231.529  L62.294 230.941  L61.941 230.412  L61.529 229.941  L61 229.529  L60.471 229.176  L60.471 229.176  L58.176 229.176  L58.176 226.765  L1 g F171.588 233.353  m171.588 233.353  L171.471 233.941  L170.941 234.882  L170.471 235.176  L170 235.412  L169.412 235.471  L169.412 235.471  L106 238.059  L106 235.706  L141.588 234.176  L141.588 234.176  L141.647 234.176  L141.647 234.176  L141.765 234.176  L141.765 234.176  L141.824 234.176  L141.824 234.176  L141.882 234.118  L141.882 234.118  L141.882 234.118  L141.882 234.118  L141.941 234.059  L141.941 234.059  L142 234  L142 234  L142.059 233.941  L142.059 233.941  L142.118 233.882  L142.118 233.882  L142.118 233.824  L142.118 233.824  L142.176 233.765  L142.176 233.765  L142.176 233.706  L142.176 233.706  L142.235 233.588  L142.235 233.588  L142.235 233.529  L142.235 233.529  L142.235 233.471  L142.235 233.471  L142.235 233.353  L142.235 233.353  L142.235 233.353  L142.235 233.353  L142.235 233.294  L142.235 233.294  L142.235 233.235  L142.235 233.235  L142.235 233.118  L142.235 233.118  L142.176 233.059  L142.176 233.059  L142.176 233  L142.176 233  L142.176 232.882  L142.176 232.882  L142.176 232.882  L142.176 232.882  L142.118 232.824  L142.118 232.824  L142.059 232.765  L142.059 232.765  L142 232.706  L142 232.706  L142 232.706  L142 232.706  L141.941 232.647  L141.941 232.647  L141.882 232.588  L141.882 232.588  L141.824 232.588  L141.824 232.588  L141.765 232.529  L141.765 232.529  L141.706 232.529  L141.706 232.529  L141.647 232.529  L106 231.059  L106 228.706  L169.412 231.235  L170 231.294  L170.471 231.529  L170.941 231.882  L171.471 232.824  L1 g F169.412 235.471  m169.607 235.471 169.805 235.451 170 235.412 c170.156 235.373 170.314 235.294 170.471 235.176 c170.666 235.098 170.824 234.999 170.941 234.882 c171.058 234.726 171.177 234.568 171.294 234.412 c171.372 234.256 171.432 234.097 171.471 233.941 c171.549 233.746 171.588 233.548 171.588 233.353 c171.588 233.158 171.549 232.98 171.471 232.824 c171.432 232.628 171.372 232.45 171.294 232.294 c171.177 232.138 171.058 231.999 170.941 231.882 c170.824 231.726 170.666 231.608 170.471 231.529 c170.314 231.412 170.156 231.333 170 231.294 c169.805 231.255 169.607 231.235 169.412 231.235 c169.412 231.235  L40.118 226  L39.608 226 39.098 225.961 38.588 225.882 c38.118 225.804 37.627 225.706 37.118 225.588 c36.647 225.471 36.176 225.314 35.706 225.118 c35.236 224.922 34.764 224.725 34.294 224.529 c34.294 224.529  L33.282 224.023 32.208 223.685 31.118 223.529 c29.988 223.374 28.855 223.413 27.765 223.647 c26.635 223.881 25.582 224.298 24.647 224.882 c23.673 225.505 22.819 226.261 22.118 227.118 c21.417 228.013 20.86 229.007 20.471 230.059 c20.081 231.11 19.882 232.224 19.882 233.353 c19.882 234.482 20.081 235.596 20.471 236.647 c20.86 237.738 21.417 238.731 22.118 239.588 c22.819 240.484 23.673 241.239 24.647 241.824 c25.582 242.408 26.635 242.825 27.765 243.059 c28.855 243.292 29.988 243.332 31.118 243.176 c32.208 243.06 33.282 242.742 34.294 242.235 c34.294 242.235  L34.764 242 35.236 241.784 35.706 241.588 c36.176 241.431 36.647 241.294 37.118 241.176 c37.627 241.02 38.118 240.902 38.588 240.824 c39.098 240.784 39.608 240.745 40.118 240.706 c40.118 240.706  L169.412 235.471  L[] 0 d 1 j 1 J0.144 w 0 G S142.176 232.882  m142.176 232.922 142.176 232.961 142.176 233 c142.176 233  L142.176 233 142.176 233.02 142.176 233.059 c142.176 233.059  L142.216 233.098 142.235 233.118 142.235 233.118 c142.235 233.118  L142.235 233.157 142.235 233.196 142.235 233.235 c142.235 233.235  L142.235 233.235 142.235 233.255 142.235 233.294 c142.235 233.294  L142.235 233.333 142.235 233.353 142.235 233.353 c142.235 233.353  L142.235 233.353 142.235 233.353 142.235 233.353 c142.235 233.392 142.235 233.431 142.235 233.471 c142.235 233.471  L142.235 233.471 142.235 233.49 142.235 233.529 c142.235 233.529  L142.235 233.569 142.235 233.588 142.235 233.588 c142.235 233.588  L142.235 233.627 142.216 233.667 142.176 233.706 c142.176 233.706  L142.176 233.706 142.176 233.725 142.176 233.765 c142.176 233.765  L142.176 233.804 142.157 233.824 142.118 233.824 c142.118 233.824  L142.118 233.863 142.118 233.882 142.118 233.882 c142.118 233.882  L142.078 233.922 142.059 233.941 142.059 233.941 c142.059 233.941  L142.059 233.98 142.039 234 142 234 c142 234  L142 234.039 141.98 234.059 141.941 234.059 c141.941 234.059  L141.941 234.059 141.922 234.078 141.882 234.118 c141.882 234.118  L141.882 234.118 141.882 234.118 141.882 234.118 c141.843 234.157 141.824 234.176 141.824 234.176 c141.824 234.176  L141.784 234.176 141.765 234.176 141.765 234.176 c141.765 234.176  L141.725 234.176 141.686 234.176 141.647 234.176 c141.647 234.176  L141.647 234.176 141.627 234.176 141.588 234.176 c141.588 234.176  L72.647 237.118  L72.569 237.118 72.471 237.118 72.353 237.118 c72.353 237.118  L72.275 237.118 72.196 237.098 72.118 237.059 c72.118 237.059  L72 237.02 71.902 236.98 71.824 236.941 c71.824 236.941  L71.745 236.941 71.647 236.902 71.529 236.824 c71.529 236.824  L71.451 236.784 71.373 236.745 71.294 236.706 c71.294 236.706  L71.216 236.627 71.137 236.549 71.059 236.471 c71.059 236.471  L70.98 236.392 70.902 236.314 70.824 236.235 c70.824 236.235  L70.745 236.157 70.667 236.078 70.588 236 c70.588 236  L70.549 235.922 70.49 235.824 70.412 235.706 c70.412 235.706  L70.373 235.627 70.314 235.529 70.235 235.412 c70.235 235.412  L70.196 235.333 70.157 235.235 70.118 235.118 c70.118 235.118  L70.078 235 70.039 234.882 70 234.765 c70 234.765  L69.961 234.647 69.922 234.529 69.882 234.412 c69.882 234.412  L69.882 234.294 69.863 234.176 69.824 234.059 c69.824 234.059  L69.824 233.941 69.824 233.804 69.824 233.647 c69.824 233.647  L69.824 233.569 69.824 233.471 69.824 233.353 c69.824 233.353  L69.824 233.353 69.824 233.333 69.824 233.294 c69.824 233.294  L69.824 233.176 69.824 233.059 69.824 232.941 c69.824 232.941  L69.824 232.824 69.843 232.706 69.882 232.588 c69.882 232.588  L69.882 232.431 69.902 232.294 69.941 232.176 c69.941 232.176  L69.98 232.059 70.02 231.941 70.059 231.824 c70.059 231.824  L70.098 231.745 70.137 231.647 70.176 231.529 c70.176 231.529  L70.216 231.412 70.255 231.294 70.294 231.176 c70.294 231.176  L70.373 231.098 70.431 231 70.471 230.882 c70.471 230.882  L70.549 230.804 70.627 230.725 70.706 230.647 c70.706 230.647  L70.745 230.569 70.804 230.49 70.882 230.412 c70.882 230.412  L70.961 230.333 71.039 230.255 71.118 230.176 c71.118 230.176  L71.196 230.098 71.275 230.039 71.353 230 c71.353 230  L71.431 229.922 71.529 229.863 71.647 229.824 c71.647 229.824  L71.725 229.784 71.804 229.745 71.882 229.706 c71.882 229.706  L72 229.667 72.098 229.647 72.176 229.647 c72.176 229.647  L72.255 229.608 72.353 229.588 72.471 229.588 c72.471 229.588  L72.549 229.588 72.647 229.588 72.765 229.588 c72.765 229.588  L141.647 232.529  L141.647 232.529 141.667 232.529 141.706 232.529 c141.706 232.529  L141.706 232.529 141.725 232.529 141.765 232.529 c141.765 232.529  L141.765 232.529 141.784 232.549 141.824 232.588 c141.824 232.588  L141.824 232.588 141.843 232.588 141.882 232.588 c141.882 232.588  L141.882 232.588 141.902 232.608 141.941 232.647 c141.941 232.647  L141.941 232.647 141.961 232.667 142 232.706 c142 232.706  L142 232.706 142 232.706 142 232.706 c142.039 232.745 142.059 232.765 142.059 232.765 c142.059 232.765  L142.098 232.804 142.118 232.824 142.118 232.824 c142.118 232.824  L142.118 232.863 142.137 232.882 142.176 232.882 c142.176 232.882  L[] 0 d 1 j 1 J0.144 w 0 G S60.471 229.176  m60.861 229.372 61.217 229.629 61.529 229.941 c61.803 230.215 62.06 230.551 62.294 230.941 c62.489 231.293 62.648 231.688 62.765 232.118 c62.882 232.508 62.941 232.923 62.941 233.353 c62.941 233.353  L62.941 233.782 62.882 234.218 62.765 234.647 c62.648 235.038 62.489 235.413 62.294 235.765 c62.06 236.155 61.803 236.491 61.529 236.765 c61.217 237.077 60.861 237.334 60.471 237.529 c60.471 237.529  L55.882 237.529  L55.492 237.334 55.136 237.077 54.824 236.765 c54.55 236.491 54.293 236.155 54.059 235.765 c53.864 235.413 53.705 235.038 53.588 234.647 c53.471 234.218 53.412 233.782 53.412 233.353 c53.412 233.353  L53.412 232.923 53.471 232.508 53.588 232.118 c53.705 231.688 53.864 231.293 54.059 230.941 c54.293 230.551 54.55 230.215 54.824 229.941 c55.136 229.629 55.492 229.372 55.882 229.176 c55.882 229.176  L60.471 229.176  L[] 0 d 1 j 1 J0.144 w 0 G S58.176 155.529  m58.176 156.353  L57.647 156.353  L57.118 156.471  L56.588 156.647  L56.118 156.882  L55.647 157.176  L55.294 157.529  L54.941 157.941  L54.353 158.882  L54.176 159.412  L54.118 159.882  L54.059 160.471  L54.118 161  L54.176 161.529  L54.353 162  L54.941 162.941  L55.294 163.353  L55.647 163.706  L56.118 164  L56.588 164.235  L57.118 164.412  L57.647 164.529  L58.176 164.529  L58.176 165.824  L43.353 166.059  L42.353 166.118  L41.294 166.235  L40.235 166.412  L39.235 166.706  L38.294 167.059  L37.294 167.529  L36.412 168  L35.529 168.588  L34.765 169.059  L33.941 169.471  L33.059 169.824  L32.235 170.059  L31.353 170.235  L30.412 170.353  L29.529 170.353  L28.588 170.294  L27.706 170.118  L26.824 169.882  L26 169.588  L25.176 169.235  L24.412 168.765  L23.647 168.235  L23 167.647  L21.765 166.235  L21.294 165.471  L20.882 164.706  L20.529 163.882  L20.235 163  L20.059 162.118  L19.941 161.176  L19.882 160.294  L19.882 160.294  L19.941 159.412  L20.118 158.471  L20.294 157.588  L20.588 156.765  L21 155.941  L21.471 155.118  L21.941 154.412  L23.176 153.059  L23.882 152.471  L24.647 152  L25.412 151.529  L26.294 151.176  L27.118 150.882  L28 150.706  L28.882 150.588  L29.824 150.529  L30.706 150.588  L31.647 150.706  L32.529 150.882  L33.353 151.176  L34.176 151.529  L35 152  L35.765 152.471  L36.647 153.118  L37.588 153.647  L38.588 154.118  L39.647 154.529  L40.706 154.824  L41.765 155.059  L42.882 155.235  L44 155.294  L1 g F256.588 160.471  m256.588 160.471  L256.529 161  L256 161.941  L255.529 162.294  L255 162.529  L254.471 162.588  L58.176 165.824  L58.176 164.529  L59 164.471  L59.765 164.235  L60.471 163.882  L61.059 163.353  L61.588 162.706  L62 162  L62.235 161.235  L62.294 160.471  L62.235 159.647  L62 158.882  L61.588 158.176  L61.059 157.529  L60.471 157  L59.765 156.647  L59 156.412  L58.176 156.353  L58.176 155.529  L254.471 158.294  L254.471 158.294  L254.471 158.294  L255 158.412  L255.529 158.588  L256 158.941  L256.529 159.882  L1 g F254.471 158.294  m44 155.294  L43.256 155.255 42.509 155.176 41.765 155.059 c41.06 154.941 40.352 154.764 39.647 154.529 c38.942 154.294 38.254 153.999 37.588 153.647 c36.962 153.295 36.352 152.901 35.765 152.471 c35.765 152.471  L34.793 151.771 33.696 151.232 32.529 150.882 c31.363 150.571 30.127 150.472 28.882 150.588 c27.677 150.705 26.501 151.024 25.412 151.529 c24.323 152.074 23.346 152.812 22.529 153.706 c21.713 154.6 21.055 155.637 20.588 156.765 c20.161 157.892 19.921 159.089 19.882 160.294 c19.882 161.5 20.102 162.716 20.529 163.882 c20.918 165.01 21.536 166.047 22.353 166.941 c23.131 167.874 24.088 168.652 25.176 169.235 c26.265 169.78 27.422 170.139 28.588 170.294 c29.794 170.45 31.03 170.37 32.235 170.059 c33.402 169.787 34.518 169.288 35.529 168.588 c35.529 168.588  L36.078 168.197 36.667 167.843 37.294 167.529 c37.921 167.216 38.569 166.941 39.235 166.706 c39.901 166.51 40.589 166.353 41.294 166.235 c41.999 166.118 42.687 166.059 43.353 166.059 c43.353 166.059  L254.471 162.588  L254.666 162.588 254.844 162.568 255 162.529 c255.195 162.451 255.373 162.372 255.529 162.294 c255.686 162.216 255.844 162.097 256 161.941 c256.117 161.824 256.216 161.686 256.294 161.529 c256.411 161.373 256.49 161.195 256.529 161 c256.568 160.805 256.588 160.627 256.588 160.471 c256.588 160.275 256.568 160.078 256.529 159.882 c256.49 159.726 256.411 159.568 256.294 159.412 c256.216 159.217 256.117 159.058 256 158.941 c255.844 158.824 255.686 158.705 255.529 158.588 c255.373 158.51 255.195 158.451 255 158.412 c254.844 158.334 254.666 158.294 254.471 158.294 c254.471 158.294  L[] 0 d 1 j 1 J0.144 w 0 G S58.176 164.529  m57.825 164.529 57.469 164.49 57.118 164.412 c56.766 164.334 56.43 164.195 56.118 164 c55.805 163.844 55.528 163.626 55.294 163.353 c55.021 163.08 54.783 162.803 54.588 162.529 c54.432 162.217 54.294 161.881 54.176 161.529 c54.098 161.178 54.059 160.822 54.059 160.471 c54.059 160.08 54.098 159.724 54.176 159.412 c54.294 159.06 54.432 158.724 54.588 158.412 c54.783 158.099 55.021 157.803 55.294 157.529 c55.528 157.295 55.805 157.078 56.118 156.882 c56.43 156.687 56.766 156.549 57.118 156.471 c57.469 156.392 57.825 156.353 58.176 156.353 c58.176 156.353  L58.72 156.353 59.26 156.453 59.765 156.647 c60.27 156.841 60.709 157.141 61.059 157.529 c61.447 157.918 61.767 158.377 62 158.882 c62.194 159.387 62.294 159.927 62.294 160.471 c62.294 160.471  L62.294 160.976 62.194 161.495 62 162 c61.767 162.505 61.447 162.964 61.059 163.353 c60.709 163.741 60.27 164.041 59.765 164.235 c59.26 164.43 58.72 164.529 58.176 164.529 c58.176 164.529  L[] 0 d 1 j 1 J0.144 w 0 G S58.176 185.824  m58.176 186.941  L57.471 187  L56.765 187.118  L56.059 187.294  L55.353 187.529  L54.706 187.824  L54.059 188.176  L53.471 188.647  L52.941 189.118  L52.471 189.647  L52.059 190.235  L51.647 190.882  L51.353 191.529  L51.118 192.176  L50.941 192.882  L50.824 193.588  L50.824 195.059  L50.941 195.765  L51.118 196.471  L51.353 197.176  L51.647 197.824  L52.059 198.412  L52.471 199  L52.941 199.529  L53.471 200  L54.059 200.471  L54.706 200.824  L55.353 201.118  L56.059 201.412  L56.765 201.588  L57.471 201.647  L58.176 201.706  L58.176 202.941  L34 203.824  L32.882 203.882  L31.765 204.059  L30.294 204.235  L28.824 204.176  L27.412 203.941  L26 203.471  L24.706 202.824  L23.529 202  L22.471 201  L20.882 198.588  L20.353 197.235  L20 195.765  L19.882 194.353  L19.882 194.353  L20 192.882  L20.353 191.471  L20.882 190.118  L22.471 187.647  L23.529 186.647  L24.706 185.824  L26 185.176  L27.412 184.706  L28.824 184.471  L30.294 184.412  L31.765 184.588  L32.882 184.765  L34 184.882  L1 g F123.765 188.294  m123.765 191.824  L74.176 190.176  L73.353 190.176  L72.529 190.412  L71.765 190.824  L70.588 191.941  L70.176 192.706  L69.882 193.471  L69.824 194.353  L69.824 194.353  L69.824 194.353  L69.882 195.176  L70.118 196  L70.471 196.706  L71.647 197.941  L72.412 198.294  L73.235 198.588  L74.059 198.647  L123.765 197.059  L123.765 200.412  L58.176 202.941  L58.176 201.706  L58.882 201.647  L59.588 201.588  L60.294 201.412  L61 201.118  L61.647 200.824  L62.294 200.471  L62.824 200  L63.412 199.529  L63.882 199  L64.294 198.412  L64.647 197.824  L65 197.176  L65.235 196.471  L65.412 195.765  L65.529 195.059  L65.529 194.353  L65.529 194.353  L65.529 194.353  L65.529 193.588  L65.412 192.882  L65.235 192.176  L65 191.529  L64.647 190.882  L64.294 190.235  L63.882 189.647  L63.412 189.118  L62.824 188.647  L62.294 188.176  L61.647 187.824  L61 187.529  L60.294 187.294  L59.588 187.118  L58.882 187  L58.176 186.941  L58.176 185.824  L1 g F228.235 194.353  m228.235 194.353  L228.176 194.882  L227.647 195.824  L227.176 196.176  L226.706 196.412  L226.118 196.471  L123.765 200.412  L123.765 197.059  L176.765 195.353  L177.176 195.235  L177.647 194.706  L177.706 194.353  L177.647 194  L177.412 193.706  L177.176 193.529  L176.824 193.471  L123.765 191.824  L123.765 188.294  L226.118 192.176  L226.118 192.176  L226.118 192.176  L226.706 192.294  L227.176 192.471  L227.647 192.824  L228.176 193.765  L1 g F226.118 192.176  m34 184.882  L33.804 184.843 33.608 184.824 33.412 184.824 c33.216 184.824 33.039 184.804 32.882 184.765 c32.686 184.765 32.49 184.745 32.294 184.706 c32.137 184.667 31.961 184.627 31.765 184.588 c31.765 184.588  L30.79 184.393 29.799 184.354 28.824 184.471 c27.888 184.549 26.936 184.786 26 185.176 c25.103 185.527 24.27 186.023 23.529 186.647 c22.788 187.271 22.134 188.005 21.588 188.824 c21.042 189.643 20.626 190.535 20.353 191.471 c20.041 192.407 19.882 193.378 19.882 194.353 c19.882 195.328 20.041 196.299 20.353 197.235 c20.626 198.171 21.042 199.044 21.588 199.824 c22.134 200.643 22.788 201.376 23.529 202 c24.27 202.624 25.103 203.12 26 203.471 c26.936 203.861 27.888 204.098 28.824 204.176 c29.799 204.293 30.79 204.254 31.765 204.059 c31.765 204.059  L31.961 204.02 32.137 203.98 32.294 203.941 c32.49 203.941 32.686 203.922 32.882 203.882 c33.039 203.882 33.216 203.863 33.412 203.824 c33.608 203.824 33.804 203.824 34 203.824 c34 203.824  L226.118 196.471  L226.313 196.471 226.511 196.451 226.706 196.412 c226.862 196.334 227.02 196.255 227.176 196.176 c227.333 196.098 227.491 195.98 227.647 195.824 c227.764 195.706 227.863 195.568 227.941 195.412 c228.058 195.256 228.137 195.078 228.176 194.882 c228.216 194.687 228.235 194.509 228.235 194.353 c228.235 194.158 228.216 193.96 228.176 193.765 c228.137 193.609 228.058 193.45 227.941 193.294 c227.863 193.099 227.764 192.941 227.647 192.824 c227.491 192.706 227.333 192.588 227.176 192.471 c227.02 192.392 226.862 192.333 226.706 192.294 c226.511 192.216 226.313 192.176 226.118 192.176 c226.118 192.176  L[] 0 d 1 j 1 J0.144 w 0 G S65.529 194.353  m65.529 195.323 65.349 196.284 65 197.176 c64.612 198.069 64.072 198.87 63.412 199.529 c62.713 200.228 61.893 200.768 61 201.118 c60.107 201.506 59.147 201.706 58.176 201.706 c58.176 201.706  L57.205 201.706 56.247 201.506 55.353 201.118 c54.46 200.768 53.64 200.228 52.941 199.529 c52.281 198.87 51.741 198.069 51.353 197.176 c51.003 196.283 50.824 195.324 50.824 194.353 c50.824 193.382 51.004 192.422 51.353 191.529 c51.741 190.637 52.281 189.816 52.941 189.118 c53.641 188.418 54.459 187.879 55.353 187.529 c56.246 187.141 57.206 186.941 58.176 186.941 c58.176 186.941  L59.147 186.941 60.107 187.141 61 187.529 c61.894 187.879 62.712 188.418 63.412 189.118 c64.072 189.816 64.612 190.637 65 191.529 c65.349 192.422 65.529 193.382 65.529 194.353 c65.529 194.353  L[] 0 d 1 j 1 J0.144 w 0 G S69.824 194.353  m69.824 194.04 69.843 193.744 69.882 193.471 c69.961 193.197 70.059 192.941 70.176 192.706 c70.255 192.432 70.393 192.176 70.588 191.941 c70.745 191.706 70.922 191.49 71.118 191.294 c71.313 191.138 71.53 190.98 71.765 190.824 c71.999 190.667 72.256 190.529 72.529 190.412 c72.803 190.334 73.079 190.255 73.353 190.176 c73.627 190.137 73.903 190.137 74.176 190.176 c74.176 190.176  L176.824 193.471  L176.94 193.471 177.06 193.491 177.176 193.529 c177.254 193.568 177.334 193.628 177.412 193.706 c177.528 193.784 177.608 193.883 177.647 194 c177.686 194.117 177.706 194.236 177.706 194.353 c177.706 194.353  L177.706 194.392 177.706 194.451 177.706 194.529 c177.706 194.608 177.686 194.667 177.647 194.706 c177.647 194.784 177.627 194.843 177.588 194.882 c177.549 194.921 177.51 194.981 177.471 195.059 c177.431 195.098 177.392 195.137 177.353 195.176 c177.275 195.216 177.216 195.235 177.176 195.235 c177.098 195.274 177.039 195.294 177 195.294 c176.922 195.333 176.843 195.353 176.765 195.353 c176.765 195.353  L74.059 198.647  L73.785 198.647 73.509 198.627 73.235 198.588 c72.961 198.51 72.686 198.411 72.412 198.294 c72.138 198.216 71.882 198.098 71.647 197.941 c71.412 197.785 71.196 197.588 71 197.353 c70.804 197.157 70.627 196.941 70.471 196.706 c70.314 196.471 70.196 196.235 70.118 196 c70 195.726 69.921 195.45 69.882 195.176 c69.804 194.903 69.784 194.627 69.824 194.353 c69.824 194.353  L[] 0 d 1 j 1 J0.144 w 0 G S%%TrailerAdobe_Illustrator88 /terminate get execAdobe_pattern /terminate get execAdobe_customcolor /terminate get execAdobe_cshow /terminate get execAdobe_cmykcolor /terminate get execAdobe_packedarray /terminate get exec%%EOF